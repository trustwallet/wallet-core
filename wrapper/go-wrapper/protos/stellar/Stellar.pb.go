// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: Stellar.proto

package stellar

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	common "tw/protos/common"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A predicate (used in claim)
// Rest of predicates not currently supported
// See https://github.com/stellar/stellar-protocol/blob/master/core/cap-0023.md
type ClaimPredicate int32

const (
	ClaimPredicate_Predicate_unconditional ClaimPredicate = 0
)

// Enum value maps for ClaimPredicate.
var (
	ClaimPredicate_name = map[int32]string{
		0: "Predicate_unconditional",
	}
	ClaimPredicate_value = map[string]int32{
		"Predicate_unconditional": 0,
	}
)

func (x ClaimPredicate) Enum() *ClaimPredicate {
	p := new(ClaimPredicate)
	*p = x
	return p
}

func (x ClaimPredicate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClaimPredicate) Descriptor() protoreflect.EnumDescriptor {
	return file_Stellar_proto_enumTypes[0].Descriptor()
}

func (ClaimPredicate) Type() protoreflect.EnumType {
	return &file_Stellar_proto_enumTypes[0]
}

func (x ClaimPredicate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClaimPredicate.Descriptor instead.
func (ClaimPredicate) EnumDescriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{0}
}

// Represents an asset
// Note: alphanum12 currently not supported
type Asset struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional in case of non-native asset; the asset issuer address
	Issuer string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// Optional in case of non-native asset; the asset alphanum4 code.
	Alphanum4     string `protobuf:"bytes,2,opt,name=alphanum4,proto3" json:"alphanum4,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_Stellar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{0}
}

func (x *Asset) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *Asset) GetAlphanum4() string {
	if x != nil {
		return x.Alphanum4
	}
	return ""
}

// Create a new account
type OperationCreateAccount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// address
	Destination string `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	// Amount (*10^7)
	Amount        int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationCreateAccount) Reset() {
	*x = OperationCreateAccount{}
	mi := &file_Stellar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationCreateAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationCreateAccount) ProtoMessage() {}

func (x *OperationCreateAccount) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationCreateAccount.ProtoReflect.Descriptor instead.
func (*OperationCreateAccount) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{1}
}

func (x *OperationCreateAccount) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *OperationCreateAccount) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// Perform payment
type OperationPayment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Destination address
	Destination string `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	// Optional, can be left empty for native asset
	Asset *Asset `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	// Amount (*10^7)
	Amount        int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationPayment) Reset() {
	*x = OperationPayment{}
	mi := &file_Stellar_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationPayment) ProtoMessage() {}

func (x *OperationPayment) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationPayment.ProtoReflect.Descriptor instead.
func (*OperationPayment) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{2}
}

func (x *OperationPayment) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *OperationPayment) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *OperationPayment) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// Change trust
type OperationChangeTrust struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The asset
	Asset *Asset `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	// Validity (time bound to), unix time.  Set to (now() + 2 * 365 * 86400) for 2 years; set to 0 for missing.
	ValidBefore   int64 `protobuf:"varint,2,opt,name=valid_before,json=validBefore,proto3" json:"valid_before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationChangeTrust) Reset() {
	*x = OperationChangeTrust{}
	mi := &file_Stellar_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationChangeTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationChangeTrust) ProtoMessage() {}

func (x *OperationChangeTrust) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationChangeTrust.ProtoReflect.Descriptor instead.
func (*OperationChangeTrust) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{3}
}

func (x *OperationChangeTrust) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *OperationChangeTrust) GetValidBefore() int64 {
	if x != nil {
		return x.ValidBefore
	}
	return 0
}

// Claimant: account & predicate
type Claimant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Claimant account
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// predicate
	Predicate     ClaimPredicate `protobuf:"varint,2,opt,name=predicate,proto3,enum=TW.Stellar.Proto.ClaimPredicate" json:"predicate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Claimant) Reset() {
	*x = Claimant{}
	mi := &file_Stellar_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Claimant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Claimant) ProtoMessage() {}

func (x *Claimant) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Claimant.ProtoReflect.Descriptor instead.
func (*Claimant) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{4}
}

func (x *Claimant) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Claimant) GetPredicate() ClaimPredicate {
	if x != nil {
		return x.Predicate
	}
	return ClaimPredicate_Predicate_unconditional
}

// Create a claimable balance (2-phase transfer)
type OperationCreateClaimableBalance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional, can be left empty for native asset
	Asset *Asset `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	// Amount (*10^7)
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// One or more claimants
	Claimants     []*Claimant `protobuf:"bytes,3,rep,name=claimants,proto3" json:"claimants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationCreateClaimableBalance) Reset() {
	*x = OperationCreateClaimableBalance{}
	mi := &file_Stellar_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationCreateClaimableBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationCreateClaimableBalance) ProtoMessage() {}

func (x *OperationCreateClaimableBalance) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationCreateClaimableBalance.ProtoReflect.Descriptor instead.
func (*OperationCreateClaimableBalance) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{5}
}

func (x *OperationCreateClaimableBalance) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *OperationCreateClaimableBalance) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OperationCreateClaimableBalance) GetClaimants() []*Claimant {
	if x != nil {
		return x.Claimants
	}
	return nil
}

// Claim a claimable balance
type OperationClaimClaimableBalance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 32-byte balance ID hash
	BalanceId     []byte `protobuf:"bytes,1,opt,name=balance_id,json=balanceId,proto3" json:"balance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationClaimClaimableBalance) Reset() {
	*x = OperationClaimClaimableBalance{}
	mi := &file_Stellar_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationClaimClaimableBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationClaimClaimableBalance) ProtoMessage() {}

func (x *OperationClaimClaimableBalance) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationClaimClaimableBalance.ProtoReflect.Descriptor instead.
func (*OperationClaimClaimableBalance) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{6}
}

func (x *OperationClaimClaimableBalance) GetBalanceId() []byte {
	if x != nil {
		return x.BalanceId
	}
	return nil
}

// Empty memo (placeholder)
type MemoVoid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoVoid) Reset() {
	*x = MemoVoid{}
	mi := &file_Stellar_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoVoid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoVoid) ProtoMessage() {}

func (x *MemoVoid) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoVoid.ProtoReflect.Descriptor instead.
func (*MemoVoid) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{7}
}

// Memo with text
type MemoText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoText) Reset() {
	*x = MemoText{}
	mi := &file_Stellar_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoText) ProtoMessage() {}

func (x *MemoText) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoText.ProtoReflect.Descriptor instead.
func (*MemoText) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{8}
}

func (x *MemoText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Memo with an ID
type MemoId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoId) Reset() {
	*x = MemoId{}
	mi := &file_Stellar_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoId) ProtoMessage() {}

func (x *MemoId) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoId.ProtoReflect.Descriptor instead.
func (*MemoId) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{9}
}

func (x *MemoId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Memo with a hash
type MemoHash struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoHash) Reset() {
	*x = MemoHash{}
	mi := &file_Stellar_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoHash) ProtoMessage() {}

func (x *MemoHash) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoHash.ProtoReflect.Descriptor instead.
func (*MemoHash) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{10}
}

func (x *MemoHash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Transaction fee
	Fee int32 `protobuf:"varint,1,opt,name=fee,proto3" json:"fee,omitempty"`
	// Account sequence
	Sequence int64 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Source account
	Account string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	// The secret private key used for signing (32 bytes).
	PrivateKey []byte `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// Wellknown passphrase, specific to the chain
	Passphrase string `protobuf:"bytes,5,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	// Payload message
	//
	// Types that are valid to be assigned to OperationOneof:
	//
	//	*SigningInput_OpCreateAccount
	//	*SigningInput_OpPayment
	//	*SigningInput_OpChangeTrust
	//	*SigningInput_OpCreateClaimableBalance
	//	*SigningInput_OpClaimClaimableBalance
	OperationOneof isSigningInput_OperationOneof `protobuf_oneof:"operation_oneof"`
	// Memo
	//
	// Types that are valid to be assigned to MemoTypeOneof:
	//
	//	*SigningInput_MemoVoid
	//	*SigningInput_MemoText
	//	*SigningInput_MemoId
	//	*SigningInput_MemoHash
	//	*SigningInput_MemoReturnHash
	MemoTypeOneof isSigningInput_MemoTypeOneof `protobuf_oneof:"memo_type_oneof"`
	TimeBounds    int64                        `protobuf:"varint,16,opt,name=time_bounds,json=timeBounds,proto3" json:"time_bounds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	mi := &file_Stellar_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{11}
}

func (x *SigningInput) GetFee() int32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *SigningInput) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *SigningInput) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

func (x *SigningInput) GetOperationOneof() isSigningInput_OperationOneof {
	if x != nil {
		return x.OperationOneof
	}
	return nil
}

func (x *SigningInput) GetOpCreateAccount() *OperationCreateAccount {
	if x != nil {
		if x, ok := x.OperationOneof.(*SigningInput_OpCreateAccount); ok {
			return x.OpCreateAccount
		}
	}
	return nil
}

func (x *SigningInput) GetOpPayment() *OperationPayment {
	if x != nil {
		if x, ok := x.OperationOneof.(*SigningInput_OpPayment); ok {
			return x.OpPayment
		}
	}
	return nil
}

func (x *SigningInput) GetOpChangeTrust() *OperationChangeTrust {
	if x != nil {
		if x, ok := x.OperationOneof.(*SigningInput_OpChangeTrust); ok {
			return x.OpChangeTrust
		}
	}
	return nil
}

func (x *SigningInput) GetOpCreateClaimableBalance() *OperationCreateClaimableBalance {
	if x != nil {
		if x, ok := x.OperationOneof.(*SigningInput_OpCreateClaimableBalance); ok {
			return x.OpCreateClaimableBalance
		}
	}
	return nil
}

func (x *SigningInput) GetOpClaimClaimableBalance() *OperationClaimClaimableBalance {
	if x != nil {
		if x, ok := x.OperationOneof.(*SigningInput_OpClaimClaimableBalance); ok {
			return x.OpClaimClaimableBalance
		}
	}
	return nil
}

func (x *SigningInput) GetMemoTypeOneof() isSigningInput_MemoTypeOneof {
	if x != nil {
		return x.MemoTypeOneof
	}
	return nil
}

func (x *SigningInput) GetMemoVoid() *MemoVoid {
	if x != nil {
		if x, ok := x.MemoTypeOneof.(*SigningInput_MemoVoid); ok {
			return x.MemoVoid
		}
	}
	return nil
}

func (x *SigningInput) GetMemoText() *MemoText {
	if x != nil {
		if x, ok := x.MemoTypeOneof.(*SigningInput_MemoText); ok {
			return x.MemoText
		}
	}
	return nil
}

func (x *SigningInput) GetMemoId() *MemoId {
	if x != nil {
		if x, ok := x.MemoTypeOneof.(*SigningInput_MemoId); ok {
			return x.MemoId
		}
	}
	return nil
}

func (x *SigningInput) GetMemoHash() *MemoHash {
	if x != nil {
		if x, ok := x.MemoTypeOneof.(*SigningInput_MemoHash); ok {
			return x.MemoHash
		}
	}
	return nil
}

func (x *SigningInput) GetMemoReturnHash() *MemoHash {
	if x != nil {
		if x, ok := x.MemoTypeOneof.(*SigningInput_MemoReturnHash); ok {
			return x.MemoReturnHash
		}
	}
	return nil
}

func (x *SigningInput) GetTimeBounds() int64 {
	if x != nil {
		return x.TimeBounds
	}
	return 0
}

type isSigningInput_OperationOneof interface {
	isSigningInput_OperationOneof()
}

type SigningInput_OpCreateAccount struct {
	OpCreateAccount *OperationCreateAccount `protobuf:"bytes,6,opt,name=op_create_account,json=opCreateAccount,proto3,oneof"`
}

type SigningInput_OpPayment struct {
	OpPayment *OperationPayment `protobuf:"bytes,7,opt,name=op_payment,json=opPayment,proto3,oneof"`
}

type SigningInput_OpChangeTrust struct {
	OpChangeTrust *OperationChangeTrust `protobuf:"bytes,8,opt,name=op_change_trust,json=opChangeTrust,proto3,oneof"`
}

type SigningInput_OpCreateClaimableBalance struct {
	OpCreateClaimableBalance *OperationCreateClaimableBalance `protobuf:"bytes,14,opt,name=op_create_claimable_balance,json=opCreateClaimableBalance,proto3,oneof"`
}

type SigningInput_OpClaimClaimableBalance struct {
	OpClaimClaimableBalance *OperationClaimClaimableBalance `protobuf:"bytes,15,opt,name=op_claim_claimable_balance,json=opClaimClaimableBalance,proto3,oneof"`
}

func (*SigningInput_OpCreateAccount) isSigningInput_OperationOneof() {}

func (*SigningInput_OpPayment) isSigningInput_OperationOneof() {}

func (*SigningInput_OpChangeTrust) isSigningInput_OperationOneof() {}

func (*SigningInput_OpCreateClaimableBalance) isSigningInput_OperationOneof() {}

func (*SigningInput_OpClaimClaimableBalance) isSigningInput_OperationOneof() {}

type isSigningInput_MemoTypeOneof interface {
	isSigningInput_MemoTypeOneof()
}

type SigningInput_MemoVoid struct {
	MemoVoid *MemoVoid `protobuf:"bytes,9,opt,name=memo_void,json=memoVoid,proto3,oneof"`
}

type SigningInput_MemoText struct {
	MemoText *MemoText `protobuf:"bytes,10,opt,name=memo_text,json=memoText,proto3,oneof"`
}

type SigningInput_MemoId struct {
	MemoId *MemoId `protobuf:"bytes,11,opt,name=memo_id,json=memoId,proto3,oneof"`
}

type SigningInput_MemoHash struct {
	MemoHash *MemoHash `protobuf:"bytes,12,opt,name=memo_hash,json=memoHash,proto3,oneof"`
}

type SigningInput_MemoReturnHash struct {
	MemoReturnHash *MemoHash `protobuf:"bytes,13,opt,name=memo_return_hash,json=memoReturnHash,proto3,oneof"`
}

func (*SigningInput_MemoVoid) isSigningInput_MemoTypeOneof() {}

func (*SigningInput_MemoText) isSigningInput_MemoTypeOneof() {}

func (*SigningInput_MemoId) isSigningInput_MemoTypeOneof() {}

func (*SigningInput_MemoHash) isSigningInput_MemoTypeOneof() {}

func (*SigningInput_MemoReturnHash) isSigningInput_MemoTypeOneof() {}

// Result containing the signed and encoded transaction.
type SigningOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Signature.
	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// error code, 0 is ok, other codes will be treated as errors
	Error common.SigningError `protobuf:"varint,2,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// error code description
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	mi := &file_Stellar_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_Stellar_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_Stellar_proto_rawDescGZIP(), []int{12}
}

func (x *SigningOutput) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_Stellar_proto protoreflect.FileDescriptor

const file_Stellar_proto_rawDesc = "" +
	"\n" +
	"\rStellar.proto\x12\x10TW.Stellar.Proto\x1a\fCommon.proto\"=\n" +
	"\x05Asset\x12\x16\n" +
	"\x06issuer\x18\x01 \x01(\tR\x06issuer\x12\x1c\n" +
	"\talphanum4\x18\x02 \x01(\tR\talphanum4\"R\n" +
	"\x16OperationCreateAccount\x12 \n" +
	"\vdestination\x18\x01 \x01(\tR\vdestination\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\"{\n" +
	"\x10OperationPayment\x12 \n" +
	"\vdestination\x18\x01 \x01(\tR\vdestination\x12-\n" +
	"\x05asset\x18\x02 \x01(\v2\x17.TW.Stellar.Proto.AssetR\x05asset\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x03R\x06amount\"h\n" +
	"\x14OperationChangeTrust\x12-\n" +
	"\x05asset\x18\x01 \x01(\v2\x17.TW.Stellar.Proto.AssetR\x05asset\x12!\n" +
	"\fvalid_before\x18\x02 \x01(\x03R\vvalidBefore\"d\n" +
	"\bClaimant\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12>\n" +
	"\tpredicate\x18\x02 \x01(\x0e2 .TW.Stellar.Proto.ClaimPredicateR\tpredicate\"\xa2\x01\n" +
	"\x1fOperationCreateClaimableBalance\x12-\n" +
	"\x05asset\x18\x01 \x01(\v2\x17.TW.Stellar.Proto.AssetR\x05asset\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\x128\n" +
	"\tclaimants\x18\x03 \x03(\v2\x1a.TW.Stellar.Proto.ClaimantR\tclaimants\"?\n" +
	"\x1eOperationClaimClaimableBalance\x12\x1d\n" +
	"\n" +
	"balance_id\x18\x01 \x01(\fR\tbalanceId\"\n" +
	"\n" +
	"\bMemoVoid\"\x1e\n" +
	"\bMemoText\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"\x18\n" +
	"\x06MemoId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\x1e\n" +
	"\bMemoHash\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\"\xe0\a\n" +
	"\fSigningInput\x12\x10\n" +
	"\x03fee\x18\x01 \x01(\x05R\x03fee\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x03R\bsequence\x12\x18\n" +
	"\aaccount\x18\x03 \x01(\tR\aaccount\x12\x1f\n" +
	"\vprivate_key\x18\x04 \x01(\fR\n" +
	"privateKey\x12\x1e\n" +
	"\n" +
	"passphrase\x18\x05 \x01(\tR\n" +
	"passphrase\x12V\n" +
	"\x11op_create_account\x18\x06 \x01(\v2(.TW.Stellar.Proto.OperationCreateAccountH\x00R\x0fopCreateAccount\x12C\n" +
	"\n" +
	"op_payment\x18\a \x01(\v2\".TW.Stellar.Proto.OperationPaymentH\x00R\topPayment\x12P\n" +
	"\x0fop_change_trust\x18\b \x01(\v2&.TW.Stellar.Proto.OperationChangeTrustH\x00R\ropChangeTrust\x12r\n" +
	"\x1bop_create_claimable_balance\x18\x0e \x01(\v21.TW.Stellar.Proto.OperationCreateClaimableBalanceH\x00R\x18opCreateClaimableBalance\x12o\n" +
	"\x1aop_claim_claimable_balance\x18\x0f \x01(\v20.TW.Stellar.Proto.OperationClaimClaimableBalanceH\x00R\x17opClaimClaimableBalance\x129\n" +
	"\tmemo_void\x18\t \x01(\v2\x1a.TW.Stellar.Proto.MemoVoidH\x01R\bmemoVoid\x129\n" +
	"\tmemo_text\x18\n" +
	" \x01(\v2\x1a.TW.Stellar.Proto.MemoTextH\x01R\bmemoText\x123\n" +
	"\amemo_id\x18\v \x01(\v2\x18.TW.Stellar.Proto.MemoIdH\x01R\x06memoId\x129\n" +
	"\tmemo_hash\x18\f \x01(\v2\x1a.TW.Stellar.Proto.MemoHashH\x01R\bmemoHash\x12F\n" +
	"\x10memo_return_hash\x18\r \x01(\v2\x1a.TW.Stellar.Proto.MemoHashH\x01R\x0ememoReturnHash\x12\x1f\n" +
	"\vtime_bounds\x18\x10 \x01(\x03R\n" +
	"timeBoundsB\x11\n" +
	"\x0foperation_oneofB\x11\n" +
	"\x0fmemo_type_oneof\"\x87\x01\n" +
	"\rSigningOutput\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\tR\tsignature\x123\n" +
	"\x05error\x18\x02 \x01(\x0e2\x1d.TW.Common.Proto.SigningErrorR\x05error\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage*-\n" +
	"\x0eClaimPredicate\x12\x1b\n" +
	"\x17Predicate_unconditional\x10\x00B\x17\n" +
	"\x15wallet.core.jni.protob\x06proto3"

var (
	file_Stellar_proto_rawDescOnce sync.Once
	file_Stellar_proto_rawDescData []byte
)

func file_Stellar_proto_rawDescGZIP() []byte {
	file_Stellar_proto_rawDescOnce.Do(func() {
		file_Stellar_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Stellar_proto_rawDesc), len(file_Stellar_proto_rawDesc)))
	})
	return file_Stellar_proto_rawDescData
}

var file_Stellar_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Stellar_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_Stellar_proto_goTypes = []any{
	(ClaimPredicate)(0),                     // 0: TW.Stellar.Proto.ClaimPredicate
	(*Asset)(nil),                           // 1: TW.Stellar.Proto.Asset
	(*OperationCreateAccount)(nil),          // 2: TW.Stellar.Proto.OperationCreateAccount
	(*OperationPayment)(nil),                // 3: TW.Stellar.Proto.OperationPayment
	(*OperationChangeTrust)(nil),            // 4: TW.Stellar.Proto.OperationChangeTrust
	(*Claimant)(nil),                        // 5: TW.Stellar.Proto.Claimant
	(*OperationCreateClaimableBalance)(nil), // 6: TW.Stellar.Proto.OperationCreateClaimableBalance
	(*OperationClaimClaimableBalance)(nil),  // 7: TW.Stellar.Proto.OperationClaimClaimableBalance
	(*MemoVoid)(nil),                        // 8: TW.Stellar.Proto.MemoVoid
	(*MemoText)(nil),                        // 9: TW.Stellar.Proto.MemoText
	(*MemoId)(nil),                          // 10: TW.Stellar.Proto.MemoId
	(*MemoHash)(nil),                        // 11: TW.Stellar.Proto.MemoHash
	(*SigningInput)(nil),                    // 12: TW.Stellar.Proto.SigningInput
	(*SigningOutput)(nil),                   // 13: TW.Stellar.Proto.SigningOutput
	(common.SigningError)(0),                // 14: TW.Common.Proto.SigningError
}
var file_Stellar_proto_depIdxs = []int32{
	1,  // 0: TW.Stellar.Proto.OperationPayment.asset:type_name -> TW.Stellar.Proto.Asset
	1,  // 1: TW.Stellar.Proto.OperationChangeTrust.asset:type_name -> TW.Stellar.Proto.Asset
	0,  // 2: TW.Stellar.Proto.Claimant.predicate:type_name -> TW.Stellar.Proto.ClaimPredicate
	1,  // 3: TW.Stellar.Proto.OperationCreateClaimableBalance.asset:type_name -> TW.Stellar.Proto.Asset
	5,  // 4: TW.Stellar.Proto.OperationCreateClaimableBalance.claimants:type_name -> TW.Stellar.Proto.Claimant
	2,  // 5: TW.Stellar.Proto.SigningInput.op_create_account:type_name -> TW.Stellar.Proto.OperationCreateAccount
	3,  // 6: TW.Stellar.Proto.SigningInput.op_payment:type_name -> TW.Stellar.Proto.OperationPayment
	4,  // 7: TW.Stellar.Proto.SigningInput.op_change_trust:type_name -> TW.Stellar.Proto.OperationChangeTrust
	6,  // 8: TW.Stellar.Proto.SigningInput.op_create_claimable_balance:type_name -> TW.Stellar.Proto.OperationCreateClaimableBalance
	7,  // 9: TW.Stellar.Proto.SigningInput.op_claim_claimable_balance:type_name -> TW.Stellar.Proto.OperationClaimClaimableBalance
	8,  // 10: TW.Stellar.Proto.SigningInput.memo_void:type_name -> TW.Stellar.Proto.MemoVoid
	9,  // 11: TW.Stellar.Proto.SigningInput.memo_text:type_name -> TW.Stellar.Proto.MemoText
	10, // 12: TW.Stellar.Proto.SigningInput.memo_id:type_name -> TW.Stellar.Proto.MemoId
	11, // 13: TW.Stellar.Proto.SigningInput.memo_hash:type_name -> TW.Stellar.Proto.MemoHash
	11, // 14: TW.Stellar.Proto.SigningInput.memo_return_hash:type_name -> TW.Stellar.Proto.MemoHash
	14, // 15: TW.Stellar.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_Stellar_proto_init() }
func file_Stellar_proto_init() {
	if File_Stellar_proto != nil {
		return
	}
	file_Stellar_proto_msgTypes[11].OneofWrappers = []any{
		(*SigningInput_OpCreateAccount)(nil),
		(*SigningInput_OpPayment)(nil),
		(*SigningInput_OpChangeTrust)(nil),
		(*SigningInput_OpCreateClaimableBalance)(nil),
		(*SigningInput_OpClaimClaimableBalance)(nil),
		(*SigningInput_MemoVoid)(nil),
		(*SigningInput_MemoText)(nil),
		(*SigningInput_MemoId)(nil),
		(*SigningInput_MemoHash)(nil),
		(*SigningInput_MemoReturnHash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Stellar_proto_rawDesc), len(file_Stellar_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Stellar_proto_goTypes,
		DependencyIndexes: file_Stellar_proto_depIdxs,
		EnumInfos:         file_Stellar_proto_enumTypes,
		MessageInfos:      file_Stellar_proto_msgTypes,
	}.Build()
	File_Stellar_proto = out.File
	file_Stellar_proto_goTypes = nil
	file_Stellar_proto_depIdxs = nil
}
