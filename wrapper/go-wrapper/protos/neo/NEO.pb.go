// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: NEO.proto

package neo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	common "tw/protos/common"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Input for a transaction (output of a prev tx)
type TransactionInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Previous tx hash
	PrevHash []byte `protobuf:"bytes,1,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	// Output index
	PrevIndex uint32 `protobuf:"fixed32,2,opt,name=prev_index,json=prevIndex,proto3" json:"prev_index,omitempty"`
	// unspent value of UTXO
	Value int64 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	// Asset
	AssetId       string `protobuf:"bytes,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInput) Reset() {
	*x = TransactionInput{}
	mi := &file_NEO_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInput) ProtoMessage() {}

func (x *TransactionInput) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInput.ProtoReflect.Descriptor instead.
func (*TransactionInput) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionInput) GetPrevHash() []byte {
	if x != nil {
		return x.PrevHash
	}
	return nil
}

func (x *TransactionInput) GetPrevIndex() uint32 {
	if x != nil {
		return x.PrevIndex
	}
	return 0
}

func (x *TransactionInput) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TransactionInput) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

// extra address of Output
type OutputAddress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Amount (as string)
	Amount int64 `protobuf:"zigzag64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// destination address
	ToAddress     string `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OutputAddress) Reset() {
	*x = OutputAddress{}
	mi := &file_NEO_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutputAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputAddress) ProtoMessage() {}

func (x *OutputAddress) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputAddress.ProtoReflect.Descriptor instead.
func (*OutputAddress) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{1}
}

func (x *OutputAddress) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OutputAddress) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

// Output of a transaction
type TransactionOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Asset
	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	// Amount (as string)
	Amount int64 `protobuf:"zigzag64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// destination address
	ToAddress string `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// change address
	ChangeAddress string `protobuf:"bytes,4,opt,name=change_address,json=changeAddress,proto3" json:"change_address,omitempty"`
	// extra output
	ExtraOutputs  []*OutputAddress `protobuf:"bytes,5,rep,name=extra_outputs,json=extraOutputs,proto3" json:"extra_outputs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionOutput) Reset() {
	*x = TransactionOutput{}
	mi := &file_NEO_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionOutput) ProtoMessage() {}

func (x *TransactionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionOutput.ProtoReflect.Descriptor instead.
func (*TransactionOutput) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionOutput) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *TransactionOutput) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionOutput) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransactionOutput) GetChangeAddress() string {
	if x != nil {
		return x.ChangeAddress
	}
	return ""
}

func (x *TransactionOutput) GetExtraOutputs() []*OutputAddress {
	if x != nil {
		return x.ExtraOutputs
	}
	return nil
}

// Transaction
type Transaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to TransactionOneof:
	//
	//	*Transaction_Nep5Transfer_
	//	*Transaction_InvocationGeneric_
	TransactionOneof isTransaction_TransactionOneof `protobuf_oneof:"transaction_oneof"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_NEO_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{3}
}

func (x *Transaction) GetTransactionOneof() isTransaction_TransactionOneof {
	if x != nil {
		return x.TransactionOneof
	}
	return nil
}

func (x *Transaction) GetNep5Transfer() *Transaction_Nep5Transfer {
	if x != nil {
		if x, ok := x.TransactionOneof.(*Transaction_Nep5Transfer_); ok {
			return x.Nep5Transfer
		}
	}
	return nil
}

func (x *Transaction) GetInvocationGeneric() *Transaction_InvocationGeneric {
	if x != nil {
		if x, ok := x.TransactionOneof.(*Transaction_InvocationGeneric_); ok {
			return x.InvocationGeneric
		}
	}
	return nil
}

type isTransaction_TransactionOneof interface {
	isTransaction_TransactionOneof()
}

type Transaction_Nep5Transfer_ struct {
	Nep5Transfer *Transaction_Nep5Transfer `protobuf:"bytes,1,opt,name=nep5_transfer,json=nep5Transfer,proto3,oneof"`
}

type Transaction_InvocationGeneric_ struct {
	InvocationGeneric *Transaction_InvocationGeneric `protobuf:"bytes,2,opt,name=invocation_generic,json=invocationGeneric,proto3,oneof"`
}

func (*Transaction_Nep5Transfer_) isTransaction_TransactionOneof() {}

func (*Transaction_InvocationGeneric_) isTransaction_TransactionOneof() {}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Available transaction inputs
	Inputs []*TransactionInput `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// Transaction outputs
	Outputs []*TransactionOutput `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// The secret private key used for signing (32 bytes).
	PrivateKey []byte `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// Fee
	Fee int64 `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	// Asset ID for gas
	GasAssetId string `protobuf:"bytes,5,opt,name=gas_asset_id,json=gasAssetId,proto3" json:"gas_asset_id,omitempty"`
	// Address for the change
	GasChangeAddress string `protobuf:"bytes,6,opt,name=gas_change_address,json=gasChangeAddress,proto3" json:"gas_change_address,omitempty"`
	// Optional transaction plan (if missing it will be computed)
	Plan          *TransactionPlan `protobuf:"bytes,7,opt,name=plan,proto3" json:"plan,omitempty"`
	Transaction   *Transaction     `protobuf:"bytes,8,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	mi := &file_NEO_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{4}
}

func (x *SigningInput) GetInputs() []*TransactionInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *SigningInput) GetOutputs() []*TransactionOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *SigningInput) GetGasAssetId() string {
	if x != nil {
		return x.GasAssetId
	}
	return ""
}

func (x *SigningInput) GetGasChangeAddress() string {
	if x != nil {
		return x.GasChangeAddress
	}
	return ""
}

func (x *SigningInput) GetPlan() *TransactionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *SigningInput) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

// Result containing the signed and encoded transaction.
type SigningOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Signed and encoded transaction bytes.
	Encoded []byte `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
	// Optional error
	Error common.SigningError `protobuf:"varint,2,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// error code description
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	mi := &file_NEO_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{5}
}

func (x *SigningOutput) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Describes a preliminary transaction output plan.
type TransactionOutputPlan struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Amount to be received at the other end.
	Amount int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// Maximum available amount.
	AvailableAmount int64 `protobuf:"varint,2,opt,name=available_amount,json=availableAmount,proto3" json:"available_amount,omitempty"`
	// Amount that is left as change
	Change int64 `protobuf:"varint,3,opt,name=change,proto3" json:"change,omitempty"`
	// Asset
	AssetId string `protobuf:"bytes,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	// Destination address
	ToAddress string `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// Address for the change
	ChangeAddress string `protobuf:"bytes,6,opt,name=change_address,json=changeAddress,proto3" json:"change_address,omitempty"`
	// extra output
	ExtraOutputs  []*OutputAddress `protobuf:"bytes,7,rep,name=extra_outputs,json=extraOutputs,proto3" json:"extra_outputs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionOutputPlan) Reset() {
	*x = TransactionOutputPlan{}
	mi := &file_NEO_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionOutputPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionOutputPlan) ProtoMessage() {}

func (x *TransactionOutputPlan) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionOutputPlan.ProtoReflect.Descriptor instead.
func (*TransactionOutputPlan) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionOutputPlan) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionOutputPlan) GetAvailableAmount() int64 {
	if x != nil {
		return x.AvailableAmount
	}
	return 0
}

func (x *TransactionOutputPlan) GetChange() int64 {
	if x != nil {
		return x.Change
	}
	return 0
}

func (x *TransactionOutputPlan) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *TransactionOutputPlan) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransactionOutputPlan) GetChangeAddress() string {
	if x != nil {
		return x.ChangeAddress
	}
	return ""
}

func (x *TransactionOutputPlan) GetExtraOutputs() []*OutputAddress {
	if x != nil {
		return x.ExtraOutputs
	}
	return nil
}

type TransactionAttributePlan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Usage         int32                  `protobuf:"varint,1,opt,name=usage,proto3" json:"usage,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionAttributePlan) Reset() {
	*x = TransactionAttributePlan{}
	mi := &file_NEO_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionAttributePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionAttributePlan) ProtoMessage() {}

func (x *TransactionAttributePlan) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionAttributePlan.ProtoReflect.Descriptor instead.
func (*TransactionAttributePlan) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{7}
}

func (x *TransactionAttributePlan) GetUsage() int32 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *TransactionAttributePlan) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Describes a preliminary transaction plan.
type TransactionPlan struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Used assets
	Outputs []*TransactionOutputPlan `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// Selected unspent transaction outputs.
	Inputs []*TransactionInput `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// GAS used
	Fee int64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	// Optional error
	Error common.SigningError `protobuf:"varint,4,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// Attribute
	Attributes    []*TransactionAttributePlan `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionPlan) Reset() {
	*x = TransactionPlan{}
	mi := &file_NEO_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionPlan) ProtoMessage() {}

func (x *TransactionPlan) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionPlan.ProtoReflect.Descriptor instead.
func (*TransactionPlan) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{8}
}

func (x *TransactionPlan) GetOutputs() []*TransactionOutputPlan {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *TransactionPlan) GetInputs() []*TransactionInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *TransactionPlan) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TransactionPlan) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *TransactionPlan) GetAttributes() []*TransactionAttributePlan {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// nep5 token transfer transaction
type Transaction_Nep5Transfer struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	AssetId string                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	From    string                 `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To      string                 `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	// Amount to send (256-bit number)
	Amount []byte `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// determine if putting THROWIFNOT & RET instructions
	ScriptWithRet bool `protobuf:"varint,5,opt,name=script_with_ret,json=scriptWithRet,proto3" json:"script_with_ret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction_Nep5Transfer) Reset() {
	*x = Transaction_Nep5Transfer{}
	mi := &file_NEO_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_Nep5Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_Nep5Transfer) ProtoMessage() {}

func (x *Transaction_Nep5Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_Nep5Transfer.ProtoReflect.Descriptor instead.
func (*Transaction_Nep5Transfer) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Transaction_Nep5Transfer) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Transaction_Nep5Transfer) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Transaction_Nep5Transfer) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transaction_Nep5Transfer) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Transaction_Nep5Transfer) GetScriptWithRet() bool {
	if x != nil {
		return x.ScriptWithRet
	}
	return false
}

// Generic invocation transaction
type Transaction_InvocationGeneric struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// gas to use
	Gas uint64 `protobuf:"varint,1,opt,name=gas,proto3" json:"gas,omitempty"`
	// Contract call payload data
	Script        []byte `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction_InvocationGeneric) Reset() {
	*x = Transaction_InvocationGeneric{}
	mi := &file_NEO_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction_InvocationGeneric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction_InvocationGeneric) ProtoMessage() {}

func (x *Transaction_InvocationGeneric) ProtoReflect() protoreflect.Message {
	mi := &file_NEO_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction_InvocationGeneric.ProtoReflect.Descriptor instead.
func (*Transaction_InvocationGeneric) Descriptor() ([]byte, []int) {
	return file_NEO_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Transaction_InvocationGeneric) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *Transaction_InvocationGeneric) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

var File_NEO_proto protoreflect.FileDescriptor

const file_NEO_proto_rawDesc = "" +
	"\n" +
	"\tNEO.proto\x12\fTW.NEO.Proto\x1a\fCommon.proto\"\x7f\n" +
	"\x10TransactionInput\x12\x1b\n" +
	"\tprev_hash\x18\x01 \x01(\fR\bprevHash\x12\x1d\n" +
	"\n" +
	"prev_index\x18\x02 \x01(\aR\tprevIndex\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x03R\x05value\x12\x19\n" +
	"\basset_id\x18\x04 \x01(\tR\aassetId\"F\n" +
	"\rOutputAddress\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x12R\x06amount\x12\x1d\n" +
	"\n" +
	"to_address\x18\x02 \x01(\tR\ttoAddress\"\xce\x01\n" +
	"\x11TransactionOutput\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\tR\aassetId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x12R\x06amount\x12\x1d\n" +
	"\n" +
	"to_address\x18\x03 \x01(\tR\ttoAddress\x12%\n" +
	"\x0echange_address\x18\x04 \x01(\tR\rchangeAddress\x12@\n" +
	"\rextra_outputs\x18\x05 \x03(\v2\x1b.TW.NEO.Proto.OutputAddressR\fextraOutputs\"\x9e\x03\n" +
	"\vTransaction\x12M\n" +
	"\rnep5_transfer\x18\x01 \x01(\v2&.TW.NEO.Proto.Transaction.Nep5TransferH\x00R\fnep5Transfer\x12\\\n" +
	"\x12invocation_generic\x18\x02 \x01(\v2+.TW.NEO.Proto.Transaction.InvocationGenericH\x00R\x11invocationGeneric\x1a\x8d\x01\n" +
	"\fNep5Transfer\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\tR\aassetId\x12\x12\n" +
	"\x04from\x18\x02 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x03 \x01(\tR\x02to\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\fR\x06amount\x12&\n" +
	"\x0fscript_with_ret\x18\x05 \x01(\bR\rscriptWithRet\x1a=\n" +
	"\x11InvocationGeneric\x12\x10\n" +
	"\x03gas\x18\x01 \x01(\x04R\x03gas\x12\x16\n" +
	"\x06script\x18\x02 \x01(\fR\x06scriptB\x13\n" +
	"\x11transaction_oneof\"\xf4\x02\n" +
	"\fSigningInput\x126\n" +
	"\x06inputs\x18\x01 \x03(\v2\x1e.TW.NEO.Proto.TransactionInputR\x06inputs\x129\n" +
	"\aoutputs\x18\x02 \x03(\v2\x1f.TW.NEO.Proto.TransactionOutputR\aoutputs\x12\x1f\n" +
	"\vprivate_key\x18\x03 \x01(\fR\n" +
	"privateKey\x12\x10\n" +
	"\x03fee\x18\x04 \x01(\x03R\x03fee\x12 \n" +
	"\fgas_asset_id\x18\x05 \x01(\tR\n" +
	"gasAssetId\x12,\n" +
	"\x12gas_change_address\x18\x06 \x01(\tR\x10gasChangeAddress\x121\n" +
	"\x04plan\x18\a \x01(\v2\x1d.TW.NEO.Proto.TransactionPlanR\x04plan\x12;\n" +
	"\vtransaction\x18\b \x01(\v2\x19.TW.NEO.Proto.TransactionR\vtransaction\"\x83\x01\n" +
	"\rSigningOutput\x12\x18\n" +
	"\aencoded\x18\x01 \x01(\fR\aencoded\x123\n" +
	"\x05error\x18\x02 \x01(\x0e2\x1d.TW.Common.Proto.SigningErrorR\x05error\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\x95\x02\n" +
	"\x15TransactionOutputPlan\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x03R\x06amount\x12)\n" +
	"\x10available_amount\x18\x02 \x01(\x03R\x0favailableAmount\x12\x16\n" +
	"\x06change\x18\x03 \x01(\x03R\x06change\x12\x19\n" +
	"\basset_id\x18\x04 \x01(\tR\aassetId\x12\x1d\n" +
	"\n" +
	"to_address\x18\x05 \x01(\tR\ttoAddress\x12%\n" +
	"\x0echange_address\x18\x06 \x01(\tR\rchangeAddress\x12@\n" +
	"\rextra_outputs\x18\a \x03(\v2\x1b.TW.NEO.Proto.OutputAddressR\fextraOutputs\"D\n" +
	"\x18TransactionAttributePlan\x12\x14\n" +
	"\x05usage\x18\x01 \x01(\x05R\x05usage\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"\x97\x02\n" +
	"\x0fTransactionPlan\x12=\n" +
	"\aoutputs\x18\x01 \x03(\v2#.TW.NEO.Proto.TransactionOutputPlanR\aoutputs\x126\n" +
	"\x06inputs\x18\x02 \x03(\v2\x1e.TW.NEO.Proto.TransactionInputR\x06inputs\x12\x10\n" +
	"\x03fee\x18\x03 \x01(\x03R\x03fee\x123\n" +
	"\x05error\x18\x04 \x01(\x0e2\x1d.TW.Common.Proto.SigningErrorR\x05error\x12F\n" +
	"\n" +
	"attributes\x18\x05 \x03(\v2&.TW.NEO.Proto.TransactionAttributePlanR\n" +
	"attributesB\x17\n" +
	"\x15wallet.core.jni.protob\x06proto3"

var (
	file_NEO_proto_rawDescOnce sync.Once
	file_NEO_proto_rawDescData []byte
)

func file_NEO_proto_rawDescGZIP() []byte {
	file_NEO_proto_rawDescOnce.Do(func() {
		file_NEO_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_NEO_proto_rawDesc), len(file_NEO_proto_rawDesc)))
	})
	return file_NEO_proto_rawDescData
}

var file_NEO_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_NEO_proto_goTypes = []any{
	(*TransactionInput)(nil),              // 0: TW.NEO.Proto.TransactionInput
	(*OutputAddress)(nil),                 // 1: TW.NEO.Proto.OutputAddress
	(*TransactionOutput)(nil),             // 2: TW.NEO.Proto.TransactionOutput
	(*Transaction)(nil),                   // 3: TW.NEO.Proto.Transaction
	(*SigningInput)(nil),                  // 4: TW.NEO.Proto.SigningInput
	(*SigningOutput)(nil),                 // 5: TW.NEO.Proto.SigningOutput
	(*TransactionOutputPlan)(nil),         // 6: TW.NEO.Proto.TransactionOutputPlan
	(*TransactionAttributePlan)(nil),      // 7: TW.NEO.Proto.TransactionAttributePlan
	(*TransactionPlan)(nil),               // 8: TW.NEO.Proto.TransactionPlan
	(*Transaction_Nep5Transfer)(nil),      // 9: TW.NEO.Proto.Transaction.Nep5Transfer
	(*Transaction_InvocationGeneric)(nil), // 10: TW.NEO.Proto.Transaction.InvocationGeneric
	(common.SigningError)(0),              // 11: TW.Common.Proto.SigningError
}
var file_NEO_proto_depIdxs = []int32{
	1,  // 0: TW.NEO.Proto.TransactionOutput.extra_outputs:type_name -> TW.NEO.Proto.OutputAddress
	9,  // 1: TW.NEO.Proto.Transaction.nep5_transfer:type_name -> TW.NEO.Proto.Transaction.Nep5Transfer
	10, // 2: TW.NEO.Proto.Transaction.invocation_generic:type_name -> TW.NEO.Proto.Transaction.InvocationGeneric
	0,  // 3: TW.NEO.Proto.SigningInput.inputs:type_name -> TW.NEO.Proto.TransactionInput
	2,  // 4: TW.NEO.Proto.SigningInput.outputs:type_name -> TW.NEO.Proto.TransactionOutput
	8,  // 5: TW.NEO.Proto.SigningInput.plan:type_name -> TW.NEO.Proto.TransactionPlan
	3,  // 6: TW.NEO.Proto.SigningInput.transaction:type_name -> TW.NEO.Proto.Transaction
	11, // 7: TW.NEO.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	1,  // 8: TW.NEO.Proto.TransactionOutputPlan.extra_outputs:type_name -> TW.NEO.Proto.OutputAddress
	6,  // 9: TW.NEO.Proto.TransactionPlan.outputs:type_name -> TW.NEO.Proto.TransactionOutputPlan
	0,  // 10: TW.NEO.Proto.TransactionPlan.inputs:type_name -> TW.NEO.Proto.TransactionInput
	11, // 11: TW.NEO.Proto.TransactionPlan.error:type_name -> TW.Common.Proto.SigningError
	7,  // 12: TW.NEO.Proto.TransactionPlan.attributes:type_name -> TW.NEO.Proto.TransactionAttributePlan
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_NEO_proto_init() }
func file_NEO_proto_init() {
	if File_NEO_proto != nil {
		return
	}
	file_NEO_proto_msgTypes[3].OneofWrappers = []any{
		(*Transaction_Nep5Transfer_)(nil),
		(*Transaction_InvocationGeneric_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_NEO_proto_rawDesc), len(file_NEO_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_NEO_proto_goTypes,
		DependencyIndexes: file_NEO_proto_depIdxs,
		MessageInfos:      file_NEO_proto_msgTypes,
	}.Build()
	File_NEO_proto = out.File
	file_NEO_proto_goTypes = nil
	file_NEO_proto_depIdxs = nil
}
