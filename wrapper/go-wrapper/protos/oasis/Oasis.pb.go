// SPDX-License-Identifier: Apache-2.0
//
// Copyright Â© 2017 Trust Wallet.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: Oasis.proto

package oasis

import (
	common "github.com/Cramiumlabs/wallet-core/wrapper/go-wrapper/protos/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Transfer
type TransferMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// destination address
	To string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// Gas price
	GasPrice uint64 `protobuf:"varint,2,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	// Amount values strings prefixed by zero. e.g. "\u000010000000"
	GasAmount string `protobuf:"bytes,3,opt,name=gas_amount,json=gasAmount,proto3" json:"gas_amount,omitempty"`
	// Amount values strings prefixed by zero
	Amount string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// Nonce (should be larger than in the last transaction of the account)
	Nonce uint64 `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Context, see https://docs.oasis.dev/oasis-core/common-functionality/crypto#domain-separation
	Context       string `protobuf:"bytes,6,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferMessage) Reset() {
	*x = TransferMessage{}
	mi := &file_Oasis_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferMessage) ProtoMessage() {}

func (x *TransferMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Oasis_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferMessage.ProtoReflect.Descriptor instead.
func (*TransferMessage) Descriptor() ([]byte, []int) {
	return file_Oasis_proto_rawDescGZIP(), []int{0}
}

func (x *TransferMessage) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransferMessage) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *TransferMessage) GetGasAmount() string {
	if x != nil {
		return x.GasAmount
	}
	return ""
}

func (x *TransferMessage) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransferMessage) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransferMessage) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

type EscrowMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GasPrice      uint64                 `protobuf:"varint,1,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasAmount     string                 `protobuf:"bytes,2,opt,name=gas_amount,json=gasAmount,proto3" json:"gas_amount,omitempty"`
	Nonce         uint64                 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Account       string                 `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	Amount        string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Context       string                 `protobuf:"bytes,6,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EscrowMessage) Reset() {
	*x = EscrowMessage{}
	mi := &file_Oasis_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EscrowMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EscrowMessage) ProtoMessage() {}

func (x *EscrowMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Oasis_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EscrowMessage.ProtoReflect.Descriptor instead.
func (*EscrowMessage) Descriptor() ([]byte, []int) {
	return file_Oasis_proto_rawDescGZIP(), []int{1}
}

func (x *EscrowMessage) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *EscrowMessage) GetGasAmount() string {
	if x != nil {
		return x.GasAmount
	}
	return ""
}

func (x *EscrowMessage) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EscrowMessage) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *EscrowMessage) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *EscrowMessage) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

type ReclaimEscrowMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GasPrice      uint64                 `protobuf:"varint,1,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasAmount     string                 `protobuf:"bytes,2,opt,name=gas_amount,json=gasAmount,proto3" json:"gas_amount,omitempty"`
	Nonce         uint64                 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Account       string                 `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	Shares        string                 `protobuf:"bytes,5,opt,name=shares,proto3" json:"shares,omitempty"`
	Context       string                 `protobuf:"bytes,6,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReclaimEscrowMessage) Reset() {
	*x = ReclaimEscrowMessage{}
	mi := &file_Oasis_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReclaimEscrowMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReclaimEscrowMessage) ProtoMessage() {}

func (x *ReclaimEscrowMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Oasis_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReclaimEscrowMessage.ProtoReflect.Descriptor instead.
func (*ReclaimEscrowMessage) Descriptor() ([]byte, []int) {
	return file_Oasis_proto_rawDescGZIP(), []int{2}
}

func (x *ReclaimEscrowMessage) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *ReclaimEscrowMessage) GetGasAmount() string {
	if x != nil {
		return x.GasAmount
	}
	return ""
}

func (x *ReclaimEscrowMessage) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ReclaimEscrowMessage) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReclaimEscrowMessage) GetShares() string {
	if x != nil {
		return x.Shares
	}
	return ""
}

func (x *ReclaimEscrowMessage) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The secret private key used for signing (32 bytes).
	PrivateKey []byte `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// Transfer payload
	//
	// Types that are valid to be assigned to Message:
	//
	//	*SigningInput_Transfer
	//	*SigningInput_Escrow
	//	*SigningInput_ReclaimEscrow
	Message       isSigningInput_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	mi := &file_Oasis_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_Oasis_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_Oasis_proto_rawDescGZIP(), []int{3}
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetMessage() isSigningInput_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SigningInput) GetTransfer() *TransferMessage {
	if x != nil {
		if x, ok := x.Message.(*SigningInput_Transfer); ok {
			return x.Transfer
		}
	}
	return nil
}

func (x *SigningInput) GetEscrow() *EscrowMessage {
	if x != nil {
		if x, ok := x.Message.(*SigningInput_Escrow); ok {
			return x.Escrow
		}
	}
	return nil
}

func (x *SigningInput) GetReclaimEscrow() *ReclaimEscrowMessage {
	if x != nil {
		if x, ok := x.Message.(*SigningInput_ReclaimEscrow); ok {
			return x.ReclaimEscrow
		}
	}
	return nil
}

type isSigningInput_Message interface {
	isSigningInput_Message()
}

type SigningInput_Transfer struct {
	Transfer *TransferMessage `protobuf:"bytes,2,opt,name=transfer,proto3,oneof"`
}

type SigningInput_Escrow struct {
	Escrow *EscrowMessage `protobuf:"bytes,3,opt,name=escrow,proto3,oneof"`
}

type SigningInput_ReclaimEscrow struct {
	ReclaimEscrow *ReclaimEscrowMessage `protobuf:"bytes,4,opt,name=reclaimEscrow,proto3,oneof"`
}

func (*SigningInput_Transfer) isSigningInput_Message() {}

func (*SigningInput_Escrow) isSigningInput_Message() {}

func (*SigningInput_ReclaimEscrow) isSigningInput_Message() {}

// Result containing the signed and encoded transaction.
type SigningOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Signed and encoded transaction bytes.
	Encoded []byte `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
	// error code, 0 is ok, other codes will be treated as errors
	Error common.SigningError `protobuf:"varint,2,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// error code description
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	mi := &file_Oasis_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_Oasis_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_Oasis_proto_rawDescGZIP(), []int{4}
}

func (x *SigningOutput) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_Oasis_proto protoreflect.FileDescriptor

const file_Oasis_proto_rawDesc = "" +
	"\n" +
	"\vOasis.proto\x12\x0eTW.Oasis.Proto\x1a\fCommon.proto\"\xa5\x01\n" +
	"\x0fTransferMessage\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x1b\n" +
	"\tgas_price\x18\x02 \x01(\x04R\bgasPrice\x12\x1d\n" +
	"\n" +
	"gas_amount\x18\x03 \x01(\tR\tgasAmount\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\tR\x06amount\x12\x14\n" +
	"\x05nonce\x18\x05 \x01(\x04R\x05nonce\x12\x18\n" +
	"\acontext\x18\x06 \x01(\tR\acontext\"\xad\x01\n" +
	"\rEscrowMessage\x12\x1b\n" +
	"\tgas_price\x18\x01 \x01(\x04R\bgasPrice\x12\x1d\n" +
	"\n" +
	"gas_amount\x18\x02 \x01(\tR\tgasAmount\x12\x14\n" +
	"\x05nonce\x18\x03 \x01(\x04R\x05nonce\x12\x18\n" +
	"\aaccount\x18\x04 \x01(\tR\aaccount\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\tR\x06amount\x12\x18\n" +
	"\acontext\x18\x06 \x01(\tR\acontext\"\xb4\x01\n" +
	"\x14ReclaimEscrowMessage\x12\x1b\n" +
	"\tgas_price\x18\x01 \x01(\x04R\bgasPrice\x12\x1d\n" +
	"\n" +
	"gas_amount\x18\x02 \x01(\tR\tgasAmount\x12\x14\n" +
	"\x05nonce\x18\x03 \x01(\x04R\x05nonce\x12\x18\n" +
	"\aaccount\x18\x04 \x01(\tR\aaccount\x12\x16\n" +
	"\x06shares\x18\x05 \x01(\tR\x06shares\x12\x18\n" +
	"\acontext\x18\x06 \x01(\tR\acontext\"\x80\x02\n" +
	"\fSigningInput\x12\x1f\n" +
	"\vprivate_key\x18\x01 \x01(\fR\n" +
	"privateKey\x12=\n" +
	"\btransfer\x18\x02 \x01(\v2\x1f.TW.Oasis.Proto.TransferMessageH\x00R\btransfer\x127\n" +
	"\x06escrow\x18\x03 \x01(\v2\x1d.TW.Oasis.Proto.EscrowMessageH\x00R\x06escrow\x12L\n" +
	"\rreclaimEscrow\x18\x04 \x01(\v2$.TW.Oasis.Proto.ReclaimEscrowMessageH\x00R\rreclaimEscrowB\t\n" +
	"\amessage\"\x83\x01\n" +
	"\rSigningOutput\x12\x18\n" +
	"\aencoded\x18\x01 \x01(\fR\aencoded\x123\n" +
	"\x05error\x18\x02 \x01(\x0e2\x1d.TW.Common.Proto.SigningErrorR\x05error\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessageB\x17\n" +
	"\x15wallet.core.jni.protob\x06proto3"

var (
	file_Oasis_proto_rawDescOnce sync.Once
	file_Oasis_proto_rawDescData []byte
)

func file_Oasis_proto_rawDescGZIP() []byte {
	file_Oasis_proto_rawDescOnce.Do(func() {
		file_Oasis_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Oasis_proto_rawDesc), len(file_Oasis_proto_rawDesc)))
	})
	return file_Oasis_proto_rawDescData
}

var file_Oasis_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_Oasis_proto_goTypes = []any{
	(*TransferMessage)(nil),      // 0: TW.Oasis.Proto.TransferMessage
	(*EscrowMessage)(nil),        // 1: TW.Oasis.Proto.EscrowMessage
	(*ReclaimEscrowMessage)(nil), // 2: TW.Oasis.Proto.ReclaimEscrowMessage
	(*SigningInput)(nil),         // 3: TW.Oasis.Proto.SigningInput
	(*SigningOutput)(nil),        // 4: TW.Oasis.Proto.SigningOutput
	(common.SigningError)(0),     // 5: TW.Common.Proto.SigningError
}
var file_Oasis_proto_depIdxs = []int32{
	0, // 0: TW.Oasis.Proto.SigningInput.transfer:type_name -> TW.Oasis.Proto.TransferMessage
	1, // 1: TW.Oasis.Proto.SigningInput.escrow:type_name -> TW.Oasis.Proto.EscrowMessage
	2, // 2: TW.Oasis.Proto.SigningInput.reclaimEscrow:type_name -> TW.Oasis.Proto.ReclaimEscrowMessage
	5, // 3: TW.Oasis.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_Oasis_proto_init() }
func file_Oasis_proto_init() {
	if File_Oasis_proto != nil {
		return
	}
	file_Oasis_proto_msgTypes[3].OneofWrappers = []any{
		(*SigningInput_Transfer)(nil),
		(*SigningInput_Escrow)(nil),
		(*SigningInput_ReclaimEscrow)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Oasis_proto_rawDesc), len(file_Oasis_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Oasis_proto_goTypes,
		DependencyIndexes: file_Oasis_proto_depIdxs,
		MessageInfos:      file_Oasis_proto_msgTypes,
	}.Build()
	File_Oasis_proto = out.File
	file_Oasis_proto_goTypes = nil
	file_Oasis_proto_depIdxs = nil
}
