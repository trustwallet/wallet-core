// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: Zcash.proto

package zcash

import (
	utxo "github.com/Cramiumlabs/wallet-core/wrapper/go-wrapper/protos/utxo"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransactionBuilderExtraData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Currently, `branch_id` is the only configurable Zcash specific parameter.
	// There can also be `version_group_id` configured in the future.
	BranchId []byte `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	// Zero in most cases.
	ExpiryHeight uint32 `protobuf:"varint,2,opt,name=expiry_height,json=expiryHeight,proto3" json:"expiry_height,omitempty"`
	// Whether to calculate the fee according to ZIP-0317 for the given transaction
	// https://zips.z.cash/zip-0317#fee-calculation
	Zip_0317      bool `protobuf:"varint,3,opt,name=zip_0317,json=zip0317,proto3" json:"zip_0317,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionBuilderExtraData) Reset() {
	*x = TransactionBuilderExtraData{}
	mi := &file_Zcash_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionBuilderExtraData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionBuilderExtraData) ProtoMessage() {}

func (x *TransactionBuilderExtraData) ProtoReflect() protoreflect.Message {
	mi := &file_Zcash_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionBuilderExtraData.ProtoReflect.Descriptor instead.
func (*TransactionBuilderExtraData) Descriptor() ([]byte, []int) {
	return file_Zcash_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionBuilderExtraData) GetBranchId() []byte {
	if x != nil {
		return x.BranchId
	}
	return nil
}

func (x *TransactionBuilderExtraData) GetExpiryHeight() uint32 {
	if x != nil {
		return x.ExpiryHeight
	}
	return 0
}

func (x *TransactionBuilderExtraData) GetZip_0317() bool {
	if x != nil {
		return x.Zip_0317
	}
	return false
}

type Transaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// / Transaction version.
	// / Currently, version 4 (0x80000004) is supported only.
	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// If transaction version is 4 (0x80000004), version group ID is 0x892F2085.
	VersionGroupId uint32 `protobuf:"varint,2,opt,name=version_group_id,json=versionGroupId,proto3" json:"version_group_id,omitempty"`
	// The transaction inputs.
	Inputs []*utxo.TransactionInput `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// The transaction outputs.
	Outputs []*utxo.TransactionOutput `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// Block height or timestamp indicating at what point transactions can be included in a block.
	// Zero by default.
	LockTime uint32 `protobuf:"varint,5,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	// Expiry height.
	ExpiryHeight uint32 `protobuf:"varint,6,opt,name=expiry_height,json=expiryHeight,proto3" json:"expiry_height,omitempty"`
	// Sapling value balance for the transaction.
	// Always 0 for a transparent transaction.
	SaplingValueBalance int64 `protobuf:"varint,7,opt,name=sapling_value_balance,json=saplingValueBalance,proto3" json:"sapling_value_balance,omitempty"`
	// Consensus branch ID for the epoch of the block containing the transaction.
	BranchId      []byte `protobuf:"bytes,8,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_Zcash_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_Zcash_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_Zcash_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Transaction) GetVersionGroupId() uint32 {
	if x != nil {
		return x.VersionGroupId
	}
	return 0
}

func (x *Transaction) GetInputs() []*utxo.TransactionInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Transaction) GetOutputs() []*utxo.TransactionOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *Transaction) GetLockTime() uint32 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *Transaction) GetExpiryHeight() uint32 {
	if x != nil {
		return x.ExpiryHeight
	}
	return 0
}

func (x *Transaction) GetSaplingValueBalance() int64 {
	if x != nil {
		return x.SaplingValueBalance
	}
	return 0
}

func (x *Transaction) GetBranchId() []byte {
	if x != nil {
		return x.BranchId
	}
	return nil
}

var File_Zcash_proto protoreflect.FileDescriptor

const file_Zcash_proto_rawDesc = "" +
	"\n" +
	"\vZcash.proto\x12\x0eTW.Zcash.Proto\x1a\n" +
	"Utxo.proto\"z\n" +
	"\x1bTransactionBuilderExtraData\x12\x1b\n" +
	"\tbranch_id\x18\x01 \x01(\fR\bbranchId\x12#\n" +
	"\rexpiry_height\x18\x02 \x01(\rR\fexpiryHeight\x12\x19\n" +
	"\bzip_0317\x18\x03 \x01(\bR\azip0317\"\xd9\x02\n" +
	"\vTransaction\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x12(\n" +
	"\x10version_group_id\x18\x02 \x01(\rR\x0eversionGroupId\x127\n" +
	"\x06inputs\x18\x03 \x03(\v2\x1f.TW.Utxo.Proto.TransactionInputR\x06inputs\x12:\n" +
	"\aoutputs\x18\x04 \x03(\v2 .TW.Utxo.Proto.TransactionOutputR\aoutputs\x12\x1b\n" +
	"\tlock_time\x18\x05 \x01(\rR\blockTime\x12#\n" +
	"\rexpiry_height\x18\x06 \x01(\rR\fexpiryHeight\x122\n" +
	"\x15sapling_value_balance\x18\a \x01(\x03R\x13saplingValueBalance\x12\x1b\n" +
	"\tbranch_id\x18\b \x01(\fR\bbranchIdB\x17\n" +
	"\x15wallet.core.jni.protob\x06proto3"

var (
	file_Zcash_proto_rawDescOnce sync.Once
	file_Zcash_proto_rawDescData []byte
)

func file_Zcash_proto_rawDescGZIP() []byte {
	file_Zcash_proto_rawDescOnce.Do(func() {
		file_Zcash_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Zcash_proto_rawDesc), len(file_Zcash_proto_rawDesc)))
	})
	return file_Zcash_proto_rawDescData
}

var file_Zcash_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_Zcash_proto_goTypes = []any{
	(*TransactionBuilderExtraData)(nil), // 0: TW.Zcash.Proto.TransactionBuilderExtraData
	(*Transaction)(nil),                 // 1: TW.Zcash.Proto.Transaction
	(*utxo.TransactionInput)(nil),       // 2: TW.Utxo.Proto.TransactionInput
	(*utxo.TransactionOutput)(nil),      // 3: TW.Utxo.Proto.TransactionOutput
}
var file_Zcash_proto_depIdxs = []int32{
	2, // 0: TW.Zcash.Proto.Transaction.inputs:type_name -> TW.Utxo.Proto.TransactionInput
	3, // 1: TW.Zcash.Proto.Transaction.outputs:type_name -> TW.Utxo.Proto.TransactionOutput
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_Zcash_proto_init() }
func file_Zcash_proto_init() {
	if File_Zcash_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Zcash_proto_rawDesc), len(file_Zcash_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Zcash_proto_goTypes,
		DependencyIndexes: file_Zcash_proto_depIdxs,
		MessageInfos:      file_Zcash_proto_msgTypes,
	}.Build()
	File_Zcash_proto = out.File
	file_Zcash_proto_goTypes = nil
	file_Zcash_proto_depIdxs = nil
}
