// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: DecredV2.proto

package decredv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Decred transaction out-point reference.
type OutPoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The hash of the referenced transaction (network byte order, usually needs to be reversed).
	// The referenced transaction ID in REVERSED order.
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// The position in the previous transactions output that this input references.
	Vout uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	// The tree in utxo, only works for DCR.
	Tree          uint32 `protobuf:"varint,3,opt,name=tree,proto3" json:"tree,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OutPoint) Reset() {
	*x = OutPoint{}
	mi := &file_DecredV2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutPoint) ProtoMessage() {}

func (x *OutPoint) ProtoReflect() protoreflect.Message {
	mi := &file_DecredV2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutPoint.ProtoReflect.Descriptor instead.
func (*OutPoint) Descriptor() ([]byte, []int) {
	return file_DecredV2_proto_rawDescGZIP(), []int{0}
}

func (x *OutPoint) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *OutPoint) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *OutPoint) GetTree() uint32 {
	if x != nil {
		return x.Tree
	}
	return 0
}

// A transfer transaction
type Transaction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Serialization format
	SerializeType uint32 `protobuf:"varint,1,opt,name=serialize_type,json=serializeType,proto3" json:"serialize_type,omitempty"`
	// Transaction version.
	// Currently, version 1 is supported only.
	Version uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// A list of 1 or more transaction inputs or sources for coins.
	Inputs []*TransactionInput `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// A list of 1 or more transaction outputs or destinations for coins
	Outputs []*TransactionOutput `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// Block height or timestamp indicating at what point transactions can be included in a block.
	// Zero by default.
	LockTime uint32 `protobuf:"varint,5,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	// The block height at which the transaction expires and is no longer valid.
	Expiry        uint32 `protobuf:"varint,6,opt,name=expiry,proto3" json:"expiry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_DecredV2_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_DecredV2_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_DecredV2_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetSerializeType() uint32 {
	if x != nil {
		return x.SerializeType
	}
	return 0
}

func (x *Transaction) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Transaction) GetInputs() []*TransactionInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Transaction) GetOutputs() []*TransactionOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *Transaction) GetLockTime() uint32 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *Transaction) GetExpiry() uint32 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

// Decred transaction input.
type TransactionInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Reference to the previous transaction's output.
	OutPoint *OutPoint `protobuf:"bytes,1,opt,name=out_point,json=outPoint,proto3" json:"out_point,omitempty"`
	// Transaction version as defined by the sender.
	Sequence uint32 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// The amount of the input.
	Value int64 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	// Creation block height.
	BlockHeight uint32 `protobuf:"varint,4,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	// Index within the block.
	BlockIndex uint32 `protobuf:"varint,5,opt,name=block_index,json=blockIndex,proto3" json:"block_index,omitempty"`
	// Computational script for confirming transaction authorization.
	ScriptSig     []byte `protobuf:"bytes,6,opt,name=script_sig,json=scriptSig,proto3" json:"script_sig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionInput) Reset() {
	*x = TransactionInput{}
	mi := &file_DecredV2_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInput) ProtoMessage() {}

func (x *TransactionInput) ProtoReflect() protoreflect.Message {
	mi := &file_DecredV2_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInput.ProtoReflect.Descriptor instead.
func (*TransactionInput) Descriptor() ([]byte, []int) {
	return file_DecredV2_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionInput) GetOutPoint() *OutPoint {
	if x != nil {
		return x.OutPoint
	}
	return nil
}

func (x *TransactionInput) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *TransactionInput) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TransactionInput) GetBlockHeight() uint32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *TransactionInput) GetBlockIndex() uint32 {
	if x != nil {
		return x.BlockIndex
	}
	return 0
}

func (x *TransactionInput) GetScriptSig() []byte {
	if x != nil {
		return x.ScriptSig
	}
	return nil
}

// Decred transaction output.
type TransactionOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Transaction amount.
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	// Transaction output version.
	Version uint32 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// Usually contains the public key as a Decred script setting up conditions to claim this output.
	Script        []byte `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionOutput) Reset() {
	*x = TransactionOutput{}
	mi := &file_DecredV2_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionOutput) ProtoMessage() {}

func (x *TransactionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_DecredV2_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionOutput.ProtoReflect.Descriptor instead.
func (*TransactionOutput) Descriptor() ([]byte, []int) {
	return file_DecredV2_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionOutput) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TransactionOutput) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TransactionOutput) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

var File_DecredV2_proto protoreflect.FileDescriptor

const file_DecredV2_proto_rawDesc = "" +
	"\n" +
	"\x0eDecredV2.proto\x12\x11TW.DecredV2.Proto\"F\n" +
	"\bOutPoint\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\fR\x04hash\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x12\x12\n" +
	"\x04tree\x18\x03 \x01(\rR\x04tree\"\x80\x02\n" +
	"\vTransaction\x12%\n" +
	"\x0eserialize_type\x18\x01 \x01(\rR\rserializeType\x12\x18\n" +
	"\aversion\x18\x02 \x01(\rR\aversion\x12;\n" +
	"\x06inputs\x18\x03 \x03(\v2#.TW.DecredV2.Proto.TransactionInputR\x06inputs\x12>\n" +
	"\aoutputs\x18\x04 \x03(\v2$.TW.DecredV2.Proto.TransactionOutputR\aoutputs\x12\x1b\n" +
	"\tlock_time\x18\x05 \x01(\rR\blockTime\x12\x16\n" +
	"\x06expiry\x18\x06 \x01(\rR\x06expiry\"\xe1\x01\n" +
	"\x10TransactionInput\x128\n" +
	"\tout_point\x18\x01 \x01(\v2\x1b.TW.DecredV2.Proto.OutPointR\boutPoint\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\rR\bsequence\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x03R\x05value\x12!\n" +
	"\fblock_height\x18\x04 \x01(\rR\vblockHeight\x12\x1f\n" +
	"\vblock_index\x18\x05 \x01(\rR\n" +
	"blockIndex\x12\x1d\n" +
	"\n" +
	"script_sig\x18\x06 \x01(\fR\tscriptSig\"[\n" +
	"\x11TransactionOutput\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x03R\x05value\x12\x18\n" +
	"\aversion\x18\x02 \x01(\rR\aversion\x12\x16\n" +
	"\x06script\x18\x03 \x01(\fR\x06scriptB\x17\n" +
	"\x15wallet.core.jni.protob\x06proto3"

var (
	file_DecredV2_proto_rawDescOnce sync.Once
	file_DecredV2_proto_rawDescData []byte
)

func file_DecredV2_proto_rawDescGZIP() []byte {
	file_DecredV2_proto_rawDescOnce.Do(func() {
		file_DecredV2_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_DecredV2_proto_rawDesc), len(file_DecredV2_proto_rawDesc)))
	})
	return file_DecredV2_proto_rawDescData
}

var file_DecredV2_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_DecredV2_proto_goTypes = []any{
	(*OutPoint)(nil),          // 0: TW.DecredV2.Proto.OutPoint
	(*Transaction)(nil),       // 1: TW.DecredV2.Proto.Transaction
	(*TransactionInput)(nil),  // 2: TW.DecredV2.Proto.TransactionInput
	(*TransactionOutput)(nil), // 3: TW.DecredV2.Proto.TransactionOutput
}
var file_DecredV2_proto_depIdxs = []int32{
	2, // 0: TW.DecredV2.Proto.Transaction.inputs:type_name -> TW.DecredV2.Proto.TransactionInput
	3, // 1: TW.DecredV2.Proto.Transaction.outputs:type_name -> TW.DecredV2.Proto.TransactionOutput
	0, // 2: TW.DecredV2.Proto.TransactionInput.out_point:type_name -> TW.DecredV2.Proto.OutPoint
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_DecredV2_proto_init() }
func file_DecredV2_proto_init() {
	if File_DecredV2_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_DecredV2_proto_rawDesc), len(file_DecredV2_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DecredV2_proto_goTypes,
		DependencyIndexes: file_DecredV2_proto_depIdxs,
		MessageInfos:      file_DecredV2_proto_msgTypes,
	}.Build()
	File_DecredV2_proto = out.File
	file_DecredV2_proto_goTypes = nil
	file_DecredV2_proto_depIdxs = nil
}
