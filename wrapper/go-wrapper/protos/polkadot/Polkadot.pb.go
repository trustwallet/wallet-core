// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: Polkadot.proto

package polkadot

import (
	common "github.com/Cramiumlabs/wallet-core/wrapper/go-wrapper/protos/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Destination options for reward
type RewardDestination int32

const (
	RewardDestination_STAKED     RewardDestination = 0
	RewardDestination_STASH      RewardDestination = 1
	RewardDestination_CONTROLLER RewardDestination = 2
)

// Enum value maps for RewardDestination.
var (
	RewardDestination_name = map[int32]string{
		0: "STAKED",
		1: "STASH",
		2: "CONTROLLER",
	}
	RewardDestination_value = map[string]int32{
		"STAKED":     0,
		"STASH":      1,
		"CONTROLLER": 2,
	}
)

func (x RewardDestination) Enum() *RewardDestination {
	p := new(RewardDestination)
	*p = x
	return p
}

func (x RewardDestination) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardDestination) Descriptor() protoreflect.EnumDescriptor {
	return file_Polkadot_proto_enumTypes[0].Descriptor()
}

func (RewardDestination) Type() protoreflect.EnumType {
	return &file_Polkadot_proto_enumTypes[0]
}

func (x RewardDestination) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardDestination.Descriptor instead.
func (RewardDestination) EnumDescriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{0}
}

// An era, a period defined by a starting block and length
type Era struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// recent block number (called phase in polkadot code), should match block hash
	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	// length of period, calculated from block number, e.g. 64
	Period        uint64 `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Era) Reset() {
	*x = Era{}
	mi := &file_Polkadot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Era) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Era) ProtoMessage() {}

func (x *Era) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Era.ProtoReflect.Descriptor instead.
func (*Era) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{0}
}

func (x *Era) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Era) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

// Readable decoded call indices can be found at https://www.subscan.io/
type CustomCallIndices struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Module index.
	ModuleIndex int32 `protobuf:"varint,4,opt,name=module_index,json=moduleIndex,proto3" json:"module_index,omitempty"`
	// Method index.
	MethodIndex   int32 `protobuf:"varint,5,opt,name=method_index,json=methodIndex,proto3" json:"method_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomCallIndices) Reset() {
	*x = CustomCallIndices{}
	mi := &file_Polkadot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomCallIndices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomCallIndices) ProtoMessage() {}

func (x *CustomCallIndices) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomCallIndices.ProtoReflect.Descriptor instead.
func (*CustomCallIndices) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{1}
}

func (x *CustomCallIndices) GetModuleIndex() int32 {
	if x != nil {
		return x.ModuleIndex
	}
	return 0
}

func (x *CustomCallIndices) GetMethodIndex() int32 {
	if x != nil {
		return x.MethodIndex
	}
	return 0
}

// Optional call indices.
// Must be set if `SigningInput::network` is different from `Polkadot` and `Kusama`.
type CallIndices struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Variant:
	//
	//	*CallIndices_Custom
	Variant       isCallIndices_Variant `protobuf_oneof:"variant"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallIndices) Reset() {
	*x = CallIndices{}
	mi := &file_Polkadot_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallIndices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallIndices) ProtoMessage() {}

func (x *CallIndices) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallIndices.ProtoReflect.Descriptor instead.
func (*CallIndices) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{2}
}

func (x *CallIndices) GetVariant() isCallIndices_Variant {
	if x != nil {
		return x.Variant
	}
	return nil
}

func (x *CallIndices) GetCustom() *CustomCallIndices {
	if x != nil {
		if x, ok := x.Variant.(*CallIndices_Custom); ok {
			return x.Custom
		}
	}
	return nil
}

type isCallIndices_Variant interface {
	isCallIndices_Variant()
}

type CallIndices_Custom struct {
	Custom *CustomCallIndices `protobuf:"bytes,1,opt,name=custom,proto3,oneof"`
}

func (*CallIndices_Custom) isCallIndices_Variant() {}

// Balance transfer transaction
type Balance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to MessageOneof:
	//
	//	*Balance_Transfer_
	//	*Balance_BatchTransfer_
	//	*Balance_AssetTransfer_
	//	*Balance_BatchAssetTransfer_
	MessageOneof  isBalance_MessageOneof `protobuf_oneof:"message_oneof"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Balance) Reset() {
	*x = Balance{}
	mi := &file_Polkadot_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{3}
}

func (x *Balance) GetMessageOneof() isBalance_MessageOneof {
	if x != nil {
		return x.MessageOneof
	}
	return nil
}

func (x *Balance) GetTransfer() *Balance_Transfer {
	if x != nil {
		if x, ok := x.MessageOneof.(*Balance_Transfer_); ok {
			return x.Transfer
		}
	}
	return nil
}

func (x *Balance) GetBatchTransfer() *Balance_BatchTransfer {
	if x != nil {
		if x, ok := x.MessageOneof.(*Balance_BatchTransfer_); ok {
			return x.BatchTransfer
		}
	}
	return nil
}

func (x *Balance) GetAssetTransfer() *Balance_AssetTransfer {
	if x != nil {
		if x, ok := x.MessageOneof.(*Balance_AssetTransfer_); ok {
			return x.AssetTransfer
		}
	}
	return nil
}

func (x *Balance) GetBatchAssetTransfer() *Balance_BatchAssetTransfer {
	if x != nil {
		if x, ok := x.MessageOneof.(*Balance_BatchAssetTransfer_); ok {
			return x.BatchAssetTransfer
		}
	}
	return nil
}

type isBalance_MessageOneof interface {
	isBalance_MessageOneof()
}

type Balance_Transfer_ struct {
	Transfer *Balance_Transfer `protobuf:"bytes,1,opt,name=transfer,proto3,oneof"`
}

type Balance_BatchTransfer_ struct {
	BatchTransfer *Balance_BatchTransfer `protobuf:"bytes,2,opt,name=batchTransfer,proto3,oneof"`
}

type Balance_AssetTransfer_ struct {
	AssetTransfer *Balance_AssetTransfer `protobuf:"bytes,3,opt,name=asset_transfer,json=assetTransfer,proto3,oneof"`
}

type Balance_BatchAssetTransfer_ struct {
	BatchAssetTransfer *Balance_BatchAssetTransfer `protobuf:"bytes,4,opt,name=batch_asset_transfer,json=batchAssetTransfer,proto3,oneof"`
}

func (*Balance_Transfer_) isBalance_MessageOneof() {}

func (*Balance_BatchTransfer_) isBalance_MessageOneof() {}

func (*Balance_AssetTransfer_) isBalance_MessageOneof() {}

func (*Balance_BatchAssetTransfer_) isBalance_MessageOneof() {}

// Staking transaction
type Staking struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Payload messsage
	//
	// Types that are valid to be assigned to MessageOneof:
	//
	//	*Staking_Bond_
	//	*Staking_BondAndNominate_
	//	*Staking_BondExtra_
	//	*Staking_Unbond_
	//	*Staking_WithdrawUnbonded_
	//	*Staking_Nominate_
	//	*Staking_Chill_
	//	*Staking_ChillAndUnbond_
	//	*Staking_Rebond_
	MessageOneof  isStaking_MessageOneof `protobuf_oneof:"message_oneof"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Staking) Reset() {
	*x = Staking{}
	mi := &file_Polkadot_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking) ProtoMessage() {}

func (x *Staking) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking.ProtoReflect.Descriptor instead.
func (*Staking) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4}
}

func (x *Staking) GetMessageOneof() isStaking_MessageOneof {
	if x != nil {
		return x.MessageOneof
	}
	return nil
}

func (x *Staking) GetBond() *Staking_Bond {
	if x != nil {
		if x, ok := x.MessageOneof.(*Staking_Bond_); ok {
			return x.Bond
		}
	}
	return nil
}

func (x *Staking) GetBondAndNominate() *Staking_BondAndNominate {
	if x != nil {
		if x, ok := x.MessageOneof.(*Staking_BondAndNominate_); ok {
			return x.BondAndNominate
		}
	}
	return nil
}

func (x *Staking) GetBondExtra() *Staking_BondExtra {
	if x != nil {
		if x, ok := x.MessageOneof.(*Staking_BondExtra_); ok {
			return x.BondExtra
		}
	}
	return nil
}

func (x *Staking) GetUnbond() *Staking_Unbond {
	if x != nil {
		if x, ok := x.MessageOneof.(*Staking_Unbond_); ok {
			return x.Unbond
		}
	}
	return nil
}

func (x *Staking) GetWithdrawUnbonded() *Staking_WithdrawUnbonded {
	if x != nil {
		if x, ok := x.MessageOneof.(*Staking_WithdrawUnbonded_); ok {
			return x.WithdrawUnbonded
		}
	}
	return nil
}

func (x *Staking) GetNominate() *Staking_Nominate {
	if x != nil {
		if x, ok := x.MessageOneof.(*Staking_Nominate_); ok {
			return x.Nominate
		}
	}
	return nil
}

func (x *Staking) GetChill() *Staking_Chill {
	if x != nil {
		if x, ok := x.MessageOneof.(*Staking_Chill_); ok {
			return x.Chill
		}
	}
	return nil
}

func (x *Staking) GetChillAndUnbond() *Staking_ChillAndUnbond {
	if x != nil {
		if x, ok := x.MessageOneof.(*Staking_ChillAndUnbond_); ok {
			return x.ChillAndUnbond
		}
	}
	return nil
}

func (x *Staking) GetRebond() *Staking_Rebond {
	if x != nil {
		if x, ok := x.MessageOneof.(*Staking_Rebond_); ok {
			return x.Rebond
		}
	}
	return nil
}

type isStaking_MessageOneof interface {
	isStaking_MessageOneof()
}

type Staking_Bond_ struct {
	Bond *Staking_Bond `protobuf:"bytes,1,opt,name=bond,proto3,oneof"`
}

type Staking_BondAndNominate_ struct {
	BondAndNominate *Staking_BondAndNominate `protobuf:"bytes,2,opt,name=bond_and_nominate,json=bondAndNominate,proto3,oneof"`
}

type Staking_BondExtra_ struct {
	BondExtra *Staking_BondExtra `protobuf:"bytes,3,opt,name=bond_extra,json=bondExtra,proto3,oneof"`
}

type Staking_Unbond_ struct {
	Unbond *Staking_Unbond `protobuf:"bytes,4,opt,name=unbond,proto3,oneof"`
}

type Staking_WithdrawUnbonded_ struct {
	WithdrawUnbonded *Staking_WithdrawUnbonded `protobuf:"bytes,5,opt,name=withdraw_unbonded,json=withdrawUnbonded,proto3,oneof"`
}

type Staking_Nominate_ struct {
	Nominate *Staking_Nominate `protobuf:"bytes,6,opt,name=nominate,proto3,oneof"`
}

type Staking_Chill_ struct {
	Chill *Staking_Chill `protobuf:"bytes,7,opt,name=chill,proto3,oneof"`
}

type Staking_ChillAndUnbond_ struct {
	ChillAndUnbond *Staking_ChillAndUnbond `protobuf:"bytes,8,opt,name=chill_and_unbond,json=chillAndUnbond,proto3,oneof"`
}

type Staking_Rebond_ struct {
	Rebond *Staking_Rebond `protobuf:"bytes,9,opt,name=rebond,proto3,oneof"`
}

func (*Staking_Bond_) isStaking_MessageOneof() {}

func (*Staking_BondAndNominate_) isStaking_MessageOneof() {}

func (*Staking_BondExtra_) isStaking_MessageOneof() {}

func (*Staking_Unbond_) isStaking_MessageOneof() {}

func (*Staking_WithdrawUnbonded_) isStaking_MessageOneof() {}

func (*Staking_Nominate_) isStaking_MessageOneof() {}

func (*Staking_Chill_) isStaking_MessageOneof() {}

func (*Staking_ChillAndUnbond_) isStaking_MessageOneof() {}

func (*Staking_Rebond_) isStaking_MessageOneof() {}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Recent block hash, or genesis hash if era is not set
	BlockHash []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// Genesis block hash (identifies the chain)
	GenesisHash []byte `protobuf:"bytes,2,opt,name=genesis_hash,json=genesisHash,proto3" json:"genesis_hash,omitempty"`
	// Current account nonce
	Nonce uint64 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Specification version, e.g. 26.
	SpecVersion uint32 `protobuf:"varint,4,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	// Transaction version, e.g. 5.
	TransactionVersion uint32 `protobuf:"varint,5,opt,name=transaction_version,json=transactionVersion,proto3" json:"transaction_version,omitempty"`
	// Optional tip to pay, big integer
	Tip []byte `protobuf:"bytes,6,opt,name=tip,proto3" json:"tip,omitempty"`
	// Optional time validity limit, recommended, for replay-protection.  Empty means Immortal.
	Era *Era `protobuf:"bytes,7,opt,name=era,proto3" json:"era,omitempty"`
	// The secret private key used for signing (32 bytes).
	PrivateKey []byte `protobuf:"bytes,8,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// Network type
	Network uint32 `protobuf:"varint,9,opt,name=network,proto3" json:"network,omitempty"`
	// Whether enable MultiAddress
	MultiAddress bool `protobuf:"varint,10,opt,name=multi_address,json=multiAddress,proto3" json:"multi_address,omitempty"`
	// Payload message
	//
	// Types that are valid to be assigned to MessageOneof:
	//
	//	*SigningInput_BalanceCall
	//	*SigningInput_StakingCall
	MessageOneof  isSigningInput_MessageOneof `protobuf_oneof:"message_oneof"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	mi := &file_Polkadot_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{5}
}

func (x *SigningInput) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *SigningInput) GetGenesisHash() []byte {
	if x != nil {
		return x.GenesisHash
	}
	return nil
}

func (x *SigningInput) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SigningInput) GetSpecVersion() uint32 {
	if x != nil {
		return x.SpecVersion
	}
	return 0
}

func (x *SigningInput) GetTransactionVersion() uint32 {
	if x != nil {
		return x.TransactionVersion
	}
	return 0
}

func (x *SigningInput) GetTip() []byte {
	if x != nil {
		return x.Tip
	}
	return nil
}

func (x *SigningInput) GetEra() *Era {
	if x != nil {
		return x.Era
	}
	return nil
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetNetwork() uint32 {
	if x != nil {
		return x.Network
	}
	return 0
}

func (x *SigningInput) GetMultiAddress() bool {
	if x != nil {
		return x.MultiAddress
	}
	return false
}

func (x *SigningInput) GetMessageOneof() isSigningInput_MessageOneof {
	if x != nil {
		return x.MessageOneof
	}
	return nil
}

func (x *SigningInput) GetBalanceCall() *Balance {
	if x != nil {
		if x, ok := x.MessageOneof.(*SigningInput_BalanceCall); ok {
			return x.BalanceCall
		}
	}
	return nil
}

func (x *SigningInput) GetStakingCall() *Staking {
	if x != nil {
		if x, ok := x.MessageOneof.(*SigningInput_StakingCall); ok {
			return x.StakingCall
		}
	}
	return nil
}

type isSigningInput_MessageOneof interface {
	isSigningInput_MessageOneof()
}

type SigningInput_BalanceCall struct {
	BalanceCall *Balance `protobuf:"bytes,11,opt,name=balance_call,json=balanceCall,proto3,oneof"`
}

type SigningInput_StakingCall struct {
	StakingCall *Staking `protobuf:"bytes,12,opt,name=staking_call,json=stakingCall,proto3,oneof"`
}

func (*SigningInput_BalanceCall) isSigningInput_MessageOneof() {}

func (*SigningInput_StakingCall) isSigningInput_MessageOneof() {}

// Result containing the signed and encoded transaction.
type SigningOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Signed and encoded transaction bytes.
	Encoded []byte `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
	// error code, 0 is ok, other codes will be treated as errors
	Error common.SigningError `protobuf:"varint,2,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// error code description
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	mi := &file_Polkadot_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{6}
}

func (x *SigningOutput) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// transfer
type Balance_Transfer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// destination address
	ToAddress string `protobuf:"bytes,1,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// amount (uint256, serialized big endian)
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// max 32 chars
	Memo string `protobuf:"bytes,3,opt,name=memo,proto3" json:"memo,omitempty"`
	// call indices
	CallIndices   *CallIndices `protobuf:"bytes,4,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Balance_Transfer) Reset() {
	*x = Balance_Transfer{}
	mi := &file_Polkadot_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Balance_Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance_Transfer) ProtoMessage() {}

func (x *Balance_Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance_Transfer.ProtoReflect.Descriptor instead.
func (*Balance_Transfer) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Balance_Transfer) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *Balance_Transfer) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Balance_Transfer) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Balance_Transfer) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

// batch tranfer
type Balance_BatchTransfer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// call indices
	CallIndices   *CallIndices        `protobuf:"bytes,1,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	Transfers     []*Balance_Transfer `protobuf:"bytes,2,rep,name=transfers,proto3" json:"transfers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Balance_BatchTransfer) Reset() {
	*x = Balance_BatchTransfer{}
	mi := &file_Polkadot_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Balance_BatchTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance_BatchTransfer) ProtoMessage() {}

func (x *Balance_BatchTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance_BatchTransfer.ProtoReflect.Descriptor instead.
func (*Balance_BatchTransfer) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Balance_BatchTransfer) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

func (x *Balance_BatchTransfer) GetTransfers() []*Balance_Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

// asset transfer
type Balance_AssetTransfer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// call indices
	CallIndices *CallIndices `protobuf:"bytes,1,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	// destination
	ToAddress string `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	// value - BigInteger
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// asset identifier
	AssetId uint32 `protobuf:"varint,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	// fee asset identifier
	FeeAssetId    uint32 `protobuf:"varint,5,opt,name=fee_asset_id,json=feeAssetId,proto3" json:"fee_asset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Balance_AssetTransfer) Reset() {
	*x = Balance_AssetTransfer{}
	mi := &file_Polkadot_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Balance_AssetTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance_AssetTransfer) ProtoMessage() {}

func (x *Balance_AssetTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance_AssetTransfer.ProtoReflect.Descriptor instead.
func (*Balance_AssetTransfer) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{3, 2}
}

func (x *Balance_AssetTransfer) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

func (x *Balance_AssetTransfer) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *Balance_AssetTransfer) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Balance_AssetTransfer) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *Balance_AssetTransfer) GetFeeAssetId() uint32 {
	if x != nil {
		return x.FeeAssetId
	}
	return 0
}

// batch asset transfer
type Balance_BatchAssetTransfer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// call indices
	CallIndices *CallIndices `protobuf:"bytes,1,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	// fee asset identifier
	FeeAssetId    uint32                   `protobuf:"varint,2,opt,name=fee_asset_id,json=feeAssetId,proto3" json:"fee_asset_id,omitempty"`
	Transfers     []*Balance_AssetTransfer `protobuf:"bytes,3,rep,name=transfers,proto3" json:"transfers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Balance_BatchAssetTransfer) Reset() {
	*x = Balance_BatchAssetTransfer{}
	mi := &file_Polkadot_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Balance_BatchAssetTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance_BatchAssetTransfer) ProtoMessage() {}

func (x *Balance_BatchAssetTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance_BatchAssetTransfer.ProtoReflect.Descriptor instead.
func (*Balance_BatchAssetTransfer) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{3, 3}
}

func (x *Balance_BatchAssetTransfer) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

func (x *Balance_BatchAssetTransfer) GetFeeAssetId() uint32 {
	if x != nil {
		return x.FeeAssetId
	}
	return 0
}

func (x *Balance_BatchAssetTransfer) GetTransfers() []*Balance_AssetTransfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

// Bond to a controller
type Staking_Bond struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// controller ID (optional)
	Controller string `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	// amount (uint256, serialized big endian)
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// destination for rewards
	RewardDestination RewardDestination `protobuf:"varint,3,opt,name=reward_destination,json=rewardDestination,proto3,enum=TW.Polkadot.Proto.RewardDestination" json:"reward_destination,omitempty"`
	// call indices
	CallIndices   *CallIndices `protobuf:"bytes,4,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Staking_Bond) Reset() {
	*x = Staking_Bond{}
	mi := &file_Polkadot_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staking_Bond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_Bond) ProtoMessage() {}

func (x *Staking_Bond) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_Bond.ProtoReflect.Descriptor instead.
func (*Staking_Bond) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Staking_Bond) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *Staking_Bond) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Staking_Bond) GetRewardDestination() RewardDestination {
	if x != nil {
		return x.RewardDestination
	}
	return RewardDestination_STAKED
}

func (x *Staking_Bond) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

// Bond to a controller, with nominators
type Staking_BondAndNominate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// controller ID (optional)
	Controller string `protobuf:"bytes,1,opt,name=controller,proto3" json:"controller,omitempty"`
	// amount (uint256, serialized big endian)
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// destination for rewards
	RewardDestination RewardDestination `protobuf:"varint,3,opt,name=reward_destination,json=rewardDestination,proto3,enum=TW.Polkadot.Proto.RewardDestination" json:"reward_destination,omitempty"`
	// list of nominators
	Nominators []string `protobuf:"bytes,4,rep,name=nominators,proto3" json:"nominators,omitempty"`
	// call indices
	CallIndices *CallIndices `protobuf:"bytes,5,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	// Staking.Bond call indices
	BondCallIndices *CallIndices `protobuf:"bytes,6,opt,name=bond_call_indices,json=bondCallIndices,proto3" json:"bond_call_indices,omitempty"`
	// Staking.Nominate call indices
	NominateCallIndices *CallIndices `protobuf:"bytes,7,opt,name=nominate_call_indices,json=nominateCallIndices,proto3" json:"nominate_call_indices,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Staking_BondAndNominate) Reset() {
	*x = Staking_BondAndNominate{}
	mi := &file_Polkadot_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staking_BondAndNominate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_BondAndNominate) ProtoMessage() {}

func (x *Staking_BondAndNominate) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_BondAndNominate.ProtoReflect.Descriptor instead.
func (*Staking_BondAndNominate) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Staking_BondAndNominate) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *Staking_BondAndNominate) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Staking_BondAndNominate) GetRewardDestination() RewardDestination {
	if x != nil {
		return x.RewardDestination
	}
	return RewardDestination_STAKED
}

func (x *Staking_BondAndNominate) GetNominators() []string {
	if x != nil {
		return x.Nominators
	}
	return nil
}

func (x *Staking_BondAndNominate) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

func (x *Staking_BondAndNominate) GetBondCallIndices() *CallIndices {
	if x != nil {
		return x.BondCallIndices
	}
	return nil
}

func (x *Staking_BondAndNominate) GetNominateCallIndices() *CallIndices {
	if x != nil {
		return x.NominateCallIndices
	}
	return nil
}

// Bond extra amount
type Staking_BondExtra struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// amount (uint256, serialized big endian)
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// call indices
	CallIndices   *CallIndices `protobuf:"bytes,2,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Staking_BondExtra) Reset() {
	*x = Staking_BondExtra{}
	mi := &file_Polkadot_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staking_BondExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_BondExtra) ProtoMessage() {}

func (x *Staking_BondExtra) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_BondExtra.ProtoReflect.Descriptor instead.
func (*Staking_BondExtra) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4, 2}
}

func (x *Staking_BondExtra) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Staking_BondExtra) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

// Unbond
type Staking_Unbond struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// amount (uint256, serialized big endian)
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// call indices
	CallIndices   *CallIndices `protobuf:"bytes,2,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Staking_Unbond) Reset() {
	*x = Staking_Unbond{}
	mi := &file_Polkadot_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staking_Unbond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_Unbond) ProtoMessage() {}

func (x *Staking_Unbond) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_Unbond.ProtoReflect.Descriptor instead.
func (*Staking_Unbond) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4, 3}
}

func (x *Staking_Unbond) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Staking_Unbond) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

// Rebond
type Staking_Rebond struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// amount (uint256, serialized big endian)
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// call indices
	CallIndices   *CallIndices `protobuf:"bytes,2,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Staking_Rebond) Reset() {
	*x = Staking_Rebond{}
	mi := &file_Polkadot_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staking_Rebond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_Rebond) ProtoMessage() {}

func (x *Staking_Rebond) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_Rebond.ProtoReflect.Descriptor instead.
func (*Staking_Rebond) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4, 4}
}

func (x *Staking_Rebond) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Staking_Rebond) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

// Withdraw unbonded amounts
type Staking_WithdrawUnbonded struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlashingSpans int32                  `protobuf:"varint,1,opt,name=slashing_spans,json=slashingSpans,proto3" json:"slashing_spans,omitempty"`
	// call indices
	CallIndices   *CallIndices `protobuf:"bytes,2,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Staking_WithdrawUnbonded) Reset() {
	*x = Staking_WithdrawUnbonded{}
	mi := &file_Polkadot_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staking_WithdrawUnbonded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_WithdrawUnbonded) ProtoMessage() {}

func (x *Staking_WithdrawUnbonded) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_WithdrawUnbonded.ProtoReflect.Descriptor instead.
func (*Staking_WithdrawUnbonded) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4, 5}
}

func (x *Staking_WithdrawUnbonded) GetSlashingSpans() int32 {
	if x != nil {
		return x.SlashingSpans
	}
	return 0
}

func (x *Staking_WithdrawUnbonded) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

// Nominate
type Staking_Nominate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// list of nominators
	Nominators []string `protobuf:"bytes,1,rep,name=nominators,proto3" json:"nominators,omitempty"`
	// call indices
	CallIndices   *CallIndices `protobuf:"bytes,2,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Staking_Nominate) Reset() {
	*x = Staking_Nominate{}
	mi := &file_Polkadot_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staking_Nominate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_Nominate) ProtoMessage() {}

func (x *Staking_Nominate) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_Nominate.ProtoReflect.Descriptor instead.
func (*Staking_Nominate) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4, 6}
}

func (x *Staking_Nominate) GetNominators() []string {
	if x != nil {
		return x.Nominators
	}
	return nil
}

func (x *Staking_Nominate) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

// Chill and unbound
type Staking_ChillAndUnbond struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// amount (uint256, serialized big endian)
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// call indices
	CallIndices *CallIndices `protobuf:"bytes,2,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	// Staking.Chill call indices
	ChillCallIndices *CallIndices `protobuf:"bytes,3,opt,name=chill_call_indices,json=chillCallIndices,proto3" json:"chill_call_indices,omitempty"`
	// Staking.Unbond call indices
	UnbondCallIndices *CallIndices `protobuf:"bytes,4,opt,name=unbond_call_indices,json=unbondCallIndices,proto3" json:"unbond_call_indices,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Staking_ChillAndUnbond) Reset() {
	*x = Staking_ChillAndUnbond{}
	mi := &file_Polkadot_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staking_ChillAndUnbond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_ChillAndUnbond) ProtoMessage() {}

func (x *Staking_ChillAndUnbond) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_ChillAndUnbond.ProtoReflect.Descriptor instead.
func (*Staking_ChillAndUnbond) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4, 7}
}

func (x *Staking_ChillAndUnbond) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Staking_ChillAndUnbond) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

func (x *Staking_ChillAndUnbond) GetChillCallIndices() *CallIndices {
	if x != nil {
		return x.ChillCallIndices
	}
	return nil
}

func (x *Staking_ChillAndUnbond) GetUnbondCallIndices() *CallIndices {
	if x != nil {
		return x.UnbondCallIndices
	}
	return nil
}

// Chill
type Staking_Chill struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// call indices
	CallIndices   *CallIndices `protobuf:"bytes,1,opt,name=call_indices,json=callIndices,proto3" json:"call_indices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Staking_Chill) Reset() {
	*x = Staking_Chill{}
	mi := &file_Polkadot_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Staking_Chill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staking_Chill) ProtoMessage() {}

func (x *Staking_Chill) ProtoReflect() protoreflect.Message {
	mi := &file_Polkadot_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staking_Chill.ProtoReflect.Descriptor instead.
func (*Staking_Chill) Descriptor() ([]byte, []int) {
	return file_Polkadot_proto_rawDescGZIP(), []int{4, 8}
}

func (x *Staking_Chill) GetCallIndices() *CallIndices {
	if x != nil {
		return x.CallIndices
	}
	return nil
}

var File_Polkadot_proto protoreflect.FileDescriptor

const file_Polkadot_proto_rawDesc = "" +
	"\n" +
	"\x0ePolkadot.proto\x12\x11TW.Polkadot.Proto\x1a\fCommon.proto\"@\n" +
	"\x03Era\x12!\n" +
	"\fblock_number\x18\x01 \x01(\x04R\vblockNumber\x12\x16\n" +
	"\x06period\x18\x02 \x01(\x04R\x06period\"Y\n" +
	"\x11CustomCallIndices\x12!\n" +
	"\fmodule_index\x18\x04 \x01(\x05R\vmoduleIndex\x12!\n" +
	"\fmethod_index\x18\x05 \x01(\x05R\vmethodIndex\"X\n" +
	"\vCallIndices\x12>\n" +
	"\x06custom\x18\x01 \x01(\v2$.TW.Polkadot.Proto.CustomCallIndicesH\x00R\x06customB\t\n" +
	"\avariant\"\xa1\b\n" +
	"\aBalance\x12A\n" +
	"\btransfer\x18\x01 \x01(\v2#.TW.Polkadot.Proto.Balance.TransferH\x00R\btransfer\x12P\n" +
	"\rbatchTransfer\x18\x02 \x01(\v2(.TW.Polkadot.Proto.Balance.BatchTransferH\x00R\rbatchTransfer\x12Q\n" +
	"\x0easset_transfer\x18\x03 \x01(\v2(.TW.Polkadot.Proto.Balance.AssetTransferH\x00R\rassetTransfer\x12a\n" +
	"\x14batch_asset_transfer\x18\x04 \x01(\v2-.TW.Polkadot.Proto.Balance.BatchAssetTransferH\x00R\x12batchAssetTransfer\x1a\x96\x01\n" +
	"\bTransfer\x12\x1d\n" +
	"\n" +
	"to_address\x18\x01 \x01(\tR\ttoAddress\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x12\n" +
	"\x04memo\x18\x03 \x01(\tR\x04memo\x12A\n" +
	"\fcall_indices\x18\x04 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x1a\x95\x01\n" +
	"\rBatchTransfer\x12A\n" +
	"\fcall_indices\x18\x01 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x12A\n" +
	"\ttransfers\x18\x02 \x03(\v2#.TW.Polkadot.Proto.Balance.TransferR\ttransfers\x1a\xc4\x01\n" +
	"\rAssetTransfer\x12A\n" +
	"\fcall_indices\x18\x01 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x12\x1d\n" +
	"\n" +
	"to_address\x18\x02 \x01(\tR\ttoAddress\x12\x14\n" +
	"\x05value\x18\x03 \x01(\fR\x05value\x12\x19\n" +
	"\basset_id\x18\x04 \x01(\rR\aassetId\x12 \n" +
	"\ffee_asset_id\x18\x05 \x01(\rR\n" +
	"feeAssetId\x1a\xc1\x01\n" +
	"\x12BatchAssetTransfer\x12A\n" +
	"\fcall_indices\x18\x01 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x12 \n" +
	"\ffee_asset_id\x18\x02 \x01(\rR\n" +
	"feeAssetId\x12F\n" +
	"\ttransfers\x18\x03 \x03(\v2(.TW.Polkadot.Proto.Balance.AssetTransferR\ttransfersB\x0f\n" +
	"\rmessage_oneof\"\x84\x11\n" +
	"\aStaking\x125\n" +
	"\x04bond\x18\x01 \x01(\v2\x1f.TW.Polkadot.Proto.Staking.BondH\x00R\x04bond\x12X\n" +
	"\x11bond_and_nominate\x18\x02 \x01(\v2*.TW.Polkadot.Proto.Staking.BondAndNominateH\x00R\x0fbondAndNominate\x12E\n" +
	"\n" +
	"bond_extra\x18\x03 \x01(\v2$.TW.Polkadot.Proto.Staking.BondExtraH\x00R\tbondExtra\x12;\n" +
	"\x06unbond\x18\x04 \x01(\v2!.TW.Polkadot.Proto.Staking.UnbondH\x00R\x06unbond\x12Z\n" +
	"\x11withdraw_unbonded\x18\x05 \x01(\v2+.TW.Polkadot.Proto.Staking.WithdrawUnbondedH\x00R\x10withdrawUnbonded\x12A\n" +
	"\bnominate\x18\x06 \x01(\v2#.TW.Polkadot.Proto.Staking.NominateH\x00R\bnominate\x128\n" +
	"\x05chill\x18\a \x01(\v2 .TW.Polkadot.Proto.Staking.ChillH\x00R\x05chill\x12U\n" +
	"\x10chill_and_unbond\x18\b \x01(\v2).TW.Polkadot.Proto.Staking.ChillAndUnbondH\x00R\x0echillAndUnbond\x12;\n" +
	"\x06rebond\x18\t \x01(\v2!.TW.Polkadot.Proto.Staking.RebondH\x00R\x06rebond\x1a\xd4\x01\n" +
	"\x04Bond\x12\x1e\n" +
	"\n" +
	"controller\x18\x01 \x01(\tR\n" +
	"controller\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12S\n" +
	"\x12reward_destination\x18\x03 \x01(\x0e2$.TW.Polkadot.Proto.RewardDestinationR\x11rewardDestination\x12A\n" +
	"\fcall_indices\x18\x04 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x1a\x9f\x03\n" +
	"\x0fBondAndNominate\x12\x1e\n" +
	"\n" +
	"controller\x18\x01 \x01(\tR\n" +
	"controller\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12S\n" +
	"\x12reward_destination\x18\x03 \x01(\x0e2$.TW.Polkadot.Proto.RewardDestinationR\x11rewardDestination\x12\x1e\n" +
	"\n" +
	"nominators\x18\x04 \x03(\tR\n" +
	"nominators\x12A\n" +
	"\fcall_indices\x18\x05 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x12J\n" +
	"\x11bond_call_indices\x18\x06 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\x0fbondCallIndices\x12R\n" +
	"\x15nominate_call_indices\x18\a \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\x13nominateCallIndices\x1ad\n" +
	"\tBondExtra\x12\x14\n" +
	"\x05value\x18\x01 \x01(\fR\x05value\x12A\n" +
	"\fcall_indices\x18\x02 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x1aa\n" +
	"\x06Unbond\x12\x14\n" +
	"\x05value\x18\x01 \x01(\fR\x05value\x12A\n" +
	"\fcall_indices\x18\x02 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x1aa\n" +
	"\x06Rebond\x12\x14\n" +
	"\x05value\x18\x01 \x01(\fR\x05value\x12A\n" +
	"\fcall_indices\x18\x02 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x1a|\n" +
	"\x10WithdrawUnbonded\x12%\n" +
	"\x0eslashing_spans\x18\x01 \x01(\x05R\rslashingSpans\x12A\n" +
	"\fcall_indices\x18\x02 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x1am\n" +
	"\bNominate\x12\x1e\n" +
	"\n" +
	"nominators\x18\x01 \x03(\tR\n" +
	"nominators\x12A\n" +
	"\fcall_indices\x18\x02 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x1a\x87\x02\n" +
	"\x0eChillAndUnbond\x12\x14\n" +
	"\x05value\x18\x01 \x01(\fR\x05value\x12A\n" +
	"\fcall_indices\x18\x02 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndices\x12L\n" +
	"\x12chill_call_indices\x18\x03 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\x10chillCallIndices\x12N\n" +
	"\x13unbond_call_indices\x18\x04 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\x11unbondCallIndices\x1aJ\n" +
	"\x05Chill\x12A\n" +
	"\fcall_indices\x18\x01 \x01(\v2\x1e.TW.Polkadot.Proto.CallIndicesR\vcallIndicesB\x0f\n" +
	"\rmessage_oneof\"\xe9\x03\n" +
	"\fSigningInput\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\fR\tblockHash\x12!\n" +
	"\fgenesis_hash\x18\x02 \x01(\fR\vgenesisHash\x12\x14\n" +
	"\x05nonce\x18\x03 \x01(\x04R\x05nonce\x12!\n" +
	"\fspec_version\x18\x04 \x01(\rR\vspecVersion\x12/\n" +
	"\x13transaction_version\x18\x05 \x01(\rR\x12transactionVersion\x12\x10\n" +
	"\x03tip\x18\x06 \x01(\fR\x03tip\x12(\n" +
	"\x03era\x18\a \x01(\v2\x16.TW.Polkadot.Proto.EraR\x03era\x12\x1f\n" +
	"\vprivate_key\x18\b \x01(\fR\n" +
	"privateKey\x12\x18\n" +
	"\anetwork\x18\t \x01(\rR\anetwork\x12#\n" +
	"\rmulti_address\x18\n" +
	" \x01(\bR\fmultiAddress\x12?\n" +
	"\fbalance_call\x18\v \x01(\v2\x1a.TW.Polkadot.Proto.BalanceH\x00R\vbalanceCall\x12?\n" +
	"\fstaking_call\x18\f \x01(\v2\x1a.TW.Polkadot.Proto.StakingH\x00R\vstakingCallB\x0f\n" +
	"\rmessage_oneof\"\x83\x01\n" +
	"\rSigningOutput\x12\x18\n" +
	"\aencoded\x18\x01 \x01(\fR\aencoded\x123\n" +
	"\x05error\x18\x02 \x01(\x0e2\x1d.TW.Common.Proto.SigningErrorR\x05error\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage*:\n" +
	"\x11RewardDestination\x12\n" +
	"\n" +
	"\x06STAKED\x10\x00\x12\t\n" +
	"\x05STASH\x10\x01\x12\x0e\n" +
	"\n" +
	"CONTROLLER\x10\x02B\x17\n" +
	"\x15wallet.core.jni.protob\x06proto3"

var (
	file_Polkadot_proto_rawDescOnce sync.Once
	file_Polkadot_proto_rawDescData []byte
)

func file_Polkadot_proto_rawDescGZIP() []byte {
	file_Polkadot_proto_rawDescOnce.Do(func() {
		file_Polkadot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Polkadot_proto_rawDesc), len(file_Polkadot_proto_rawDesc)))
	})
	return file_Polkadot_proto_rawDescData
}

var file_Polkadot_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Polkadot_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_Polkadot_proto_goTypes = []any{
	(RewardDestination)(0),             // 0: TW.Polkadot.Proto.RewardDestination
	(*Era)(nil),                        // 1: TW.Polkadot.Proto.Era
	(*CustomCallIndices)(nil),          // 2: TW.Polkadot.Proto.CustomCallIndices
	(*CallIndices)(nil),                // 3: TW.Polkadot.Proto.CallIndices
	(*Balance)(nil),                    // 4: TW.Polkadot.Proto.Balance
	(*Staking)(nil),                    // 5: TW.Polkadot.Proto.Staking
	(*SigningInput)(nil),               // 6: TW.Polkadot.Proto.SigningInput
	(*SigningOutput)(nil),              // 7: TW.Polkadot.Proto.SigningOutput
	(*Balance_Transfer)(nil),           // 8: TW.Polkadot.Proto.Balance.Transfer
	(*Balance_BatchTransfer)(nil),      // 9: TW.Polkadot.Proto.Balance.BatchTransfer
	(*Balance_AssetTransfer)(nil),      // 10: TW.Polkadot.Proto.Balance.AssetTransfer
	(*Balance_BatchAssetTransfer)(nil), // 11: TW.Polkadot.Proto.Balance.BatchAssetTransfer
	(*Staking_Bond)(nil),               // 12: TW.Polkadot.Proto.Staking.Bond
	(*Staking_BondAndNominate)(nil),    // 13: TW.Polkadot.Proto.Staking.BondAndNominate
	(*Staking_BondExtra)(nil),          // 14: TW.Polkadot.Proto.Staking.BondExtra
	(*Staking_Unbond)(nil),             // 15: TW.Polkadot.Proto.Staking.Unbond
	(*Staking_Rebond)(nil),             // 16: TW.Polkadot.Proto.Staking.Rebond
	(*Staking_WithdrawUnbonded)(nil),   // 17: TW.Polkadot.Proto.Staking.WithdrawUnbonded
	(*Staking_Nominate)(nil),           // 18: TW.Polkadot.Proto.Staking.Nominate
	(*Staking_ChillAndUnbond)(nil),     // 19: TW.Polkadot.Proto.Staking.ChillAndUnbond
	(*Staking_Chill)(nil),              // 20: TW.Polkadot.Proto.Staking.Chill
	(common.SigningError)(0),           // 21: TW.Common.Proto.SigningError
}
var file_Polkadot_proto_depIdxs = []int32{
	2,  // 0: TW.Polkadot.Proto.CallIndices.custom:type_name -> TW.Polkadot.Proto.CustomCallIndices
	8,  // 1: TW.Polkadot.Proto.Balance.transfer:type_name -> TW.Polkadot.Proto.Balance.Transfer
	9,  // 2: TW.Polkadot.Proto.Balance.batchTransfer:type_name -> TW.Polkadot.Proto.Balance.BatchTransfer
	10, // 3: TW.Polkadot.Proto.Balance.asset_transfer:type_name -> TW.Polkadot.Proto.Balance.AssetTransfer
	11, // 4: TW.Polkadot.Proto.Balance.batch_asset_transfer:type_name -> TW.Polkadot.Proto.Balance.BatchAssetTransfer
	12, // 5: TW.Polkadot.Proto.Staking.bond:type_name -> TW.Polkadot.Proto.Staking.Bond
	13, // 6: TW.Polkadot.Proto.Staking.bond_and_nominate:type_name -> TW.Polkadot.Proto.Staking.BondAndNominate
	14, // 7: TW.Polkadot.Proto.Staking.bond_extra:type_name -> TW.Polkadot.Proto.Staking.BondExtra
	15, // 8: TW.Polkadot.Proto.Staking.unbond:type_name -> TW.Polkadot.Proto.Staking.Unbond
	17, // 9: TW.Polkadot.Proto.Staking.withdraw_unbonded:type_name -> TW.Polkadot.Proto.Staking.WithdrawUnbonded
	18, // 10: TW.Polkadot.Proto.Staking.nominate:type_name -> TW.Polkadot.Proto.Staking.Nominate
	20, // 11: TW.Polkadot.Proto.Staking.chill:type_name -> TW.Polkadot.Proto.Staking.Chill
	19, // 12: TW.Polkadot.Proto.Staking.chill_and_unbond:type_name -> TW.Polkadot.Proto.Staking.ChillAndUnbond
	16, // 13: TW.Polkadot.Proto.Staking.rebond:type_name -> TW.Polkadot.Proto.Staking.Rebond
	1,  // 14: TW.Polkadot.Proto.SigningInput.era:type_name -> TW.Polkadot.Proto.Era
	4,  // 15: TW.Polkadot.Proto.SigningInput.balance_call:type_name -> TW.Polkadot.Proto.Balance
	5,  // 16: TW.Polkadot.Proto.SigningInput.staking_call:type_name -> TW.Polkadot.Proto.Staking
	21, // 17: TW.Polkadot.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	3,  // 18: TW.Polkadot.Proto.Balance.Transfer.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 19: TW.Polkadot.Proto.Balance.BatchTransfer.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	8,  // 20: TW.Polkadot.Proto.Balance.BatchTransfer.transfers:type_name -> TW.Polkadot.Proto.Balance.Transfer
	3,  // 21: TW.Polkadot.Proto.Balance.AssetTransfer.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 22: TW.Polkadot.Proto.Balance.BatchAssetTransfer.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	10, // 23: TW.Polkadot.Proto.Balance.BatchAssetTransfer.transfers:type_name -> TW.Polkadot.Proto.Balance.AssetTransfer
	0,  // 24: TW.Polkadot.Proto.Staking.Bond.reward_destination:type_name -> TW.Polkadot.Proto.RewardDestination
	3,  // 25: TW.Polkadot.Proto.Staking.Bond.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	0,  // 26: TW.Polkadot.Proto.Staking.BondAndNominate.reward_destination:type_name -> TW.Polkadot.Proto.RewardDestination
	3,  // 27: TW.Polkadot.Proto.Staking.BondAndNominate.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 28: TW.Polkadot.Proto.Staking.BondAndNominate.bond_call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 29: TW.Polkadot.Proto.Staking.BondAndNominate.nominate_call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 30: TW.Polkadot.Proto.Staking.BondExtra.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 31: TW.Polkadot.Proto.Staking.Unbond.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 32: TW.Polkadot.Proto.Staking.Rebond.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 33: TW.Polkadot.Proto.Staking.WithdrawUnbonded.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 34: TW.Polkadot.Proto.Staking.Nominate.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 35: TW.Polkadot.Proto.Staking.ChillAndUnbond.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 36: TW.Polkadot.Proto.Staking.ChillAndUnbond.chill_call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 37: TW.Polkadot.Proto.Staking.ChillAndUnbond.unbond_call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	3,  // 38: TW.Polkadot.Proto.Staking.Chill.call_indices:type_name -> TW.Polkadot.Proto.CallIndices
	39, // [39:39] is the sub-list for method output_type
	39, // [39:39] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_Polkadot_proto_init() }
func file_Polkadot_proto_init() {
	if File_Polkadot_proto != nil {
		return
	}
	file_Polkadot_proto_msgTypes[2].OneofWrappers = []any{
		(*CallIndices_Custom)(nil),
	}
	file_Polkadot_proto_msgTypes[3].OneofWrappers = []any{
		(*Balance_Transfer_)(nil),
		(*Balance_BatchTransfer_)(nil),
		(*Balance_AssetTransfer_)(nil),
		(*Balance_BatchAssetTransfer_)(nil),
	}
	file_Polkadot_proto_msgTypes[4].OneofWrappers = []any{
		(*Staking_Bond_)(nil),
		(*Staking_BondAndNominate_)(nil),
		(*Staking_BondExtra_)(nil),
		(*Staking_Unbond_)(nil),
		(*Staking_WithdrawUnbonded_)(nil),
		(*Staking_Nominate_)(nil),
		(*Staking_Chill_)(nil),
		(*Staking_ChillAndUnbond_)(nil),
		(*Staking_Rebond_)(nil),
	}
	file_Polkadot_proto_msgTypes[5].OneofWrappers = []any{
		(*SigningInput_BalanceCall)(nil),
		(*SigningInput_StakingCall)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Polkadot_proto_rawDesc), len(file_Polkadot_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Polkadot_proto_goTypes,
		DependencyIndexes: file_Polkadot_proto_depIdxs,
		EnumInfos:         file_Polkadot_proto_enumTypes,
		MessageInfos:      file_Polkadot_proto_msgTypes,
	}.Build()
	File_Polkadot_proto = out.File
	file_Polkadot_proto_goTypes = nil
	file_Polkadot_proto_depIdxs = nil
}
