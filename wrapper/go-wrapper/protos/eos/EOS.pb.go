// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: EOS.proto

package eos

import (
	common "github.com/Cramiumlabs/wallet-core/wrapper/go-wrapper/protos/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyType int32

const (
	KeyType_LEGACY   KeyType = 0
	KeyType_MODERNK1 KeyType = 1
	KeyType_MODERNR1 KeyType = 2
)

// Enum value maps for KeyType.
var (
	KeyType_name = map[int32]string{
		0: "LEGACY",
		1: "MODERNK1",
		2: "MODERNR1",
	}
	KeyType_value = map[string]int32{
		"LEGACY":   0,
		"MODERNK1": 1,
		"MODERNR1": 2,
	}
)

func (x KeyType) Enum() *KeyType {
	p := new(KeyType)
	*p = x
	return p
}

func (x KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_EOS_proto_enumTypes[0].Descriptor()
}

func (KeyType) Type() protoreflect.EnumType {
	return &file_EOS_proto_enumTypes[0]
}

func (x KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyType.Descriptor instead.
func (KeyType) EnumDescriptor() ([]byte, []int) {
	return file_EOS_proto_rawDescGZIP(), []int{0}
}

// Values for an Asset object.
type Asset struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total amount
	Amount int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// Number of decimals defined
	Decimals uint32 `protobuf:"varint,2,opt,name=decimals,proto3" json:"decimals,omitempty"`
	// Asset symbol
	Symbol        string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_EOS_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_EOS_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_EOS_proto_rawDescGZIP(), []int{0}
}

func (x *Asset) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Asset) GetDecimals() uint32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *Asset) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

// Input data necessary to create a signed transaction.
type SigningInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chain id (uint256, serialized big endian)
	ChainId []byte `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Reference Block Id (uint256, serialized big endian)
	ReferenceBlockId []byte `protobuf:"bytes,2,opt,name=reference_block_id,json=referenceBlockId,proto3" json:"reference_block_id,omitempty"`
	// Timestamp on the reference block
	ReferenceBlockTime int32 `protobuf:"fixed32,3,opt,name=reference_block_time,json=referenceBlockTime,proto3" json:"reference_block_time,omitempty"`
	// Currency (e.g. "eosio.token")
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	// Sender's username
	Sender string `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	// Recipient's username
	Recipient string `protobuf:"bytes,6,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// Memo attached to the transaction
	Memo string `protobuf:"bytes,7,opt,name=memo,proto3" json:"memo,omitempty"`
	// Asset details and amount
	Asset *Asset `protobuf:"bytes,8,opt,name=asset,proto3" json:"asset,omitempty"`
	// Sender's secret private key used for signing (32 bytes).
	PrivateKey []byte `protobuf:"bytes,9,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// Type of the private key
	PrivateKeyType KeyType `protobuf:"varint,10,opt,name=private_key_type,json=privateKeyType,proto3,enum=TW.EOS.Proto.KeyType" json:"private_key_type,omitempty"`
	// Expiration of the transaction, if not set, default is reference_block_time + 3600 seconds
	Expiration    int32 `protobuf:"fixed32,11,opt,name=expiration,proto3" json:"expiration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	mi := &file_EOS_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_EOS_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_EOS_proto_rawDescGZIP(), []int{1}
}

func (x *SigningInput) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *SigningInput) GetReferenceBlockId() []byte {
	if x != nil {
		return x.ReferenceBlockId
	}
	return nil
}

func (x *SigningInput) GetReferenceBlockTime() int32 {
	if x != nil {
		return x.ReferenceBlockTime
	}
	return 0
}

func (x *SigningInput) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *SigningInput) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *SigningInput) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *SigningInput) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *SigningInput) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetPrivateKeyType() KeyType {
	if x != nil {
		return x.PrivateKeyType
	}
	return KeyType_LEGACY
}

func (x *SigningInput) GetExpiration() int32 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

// Result containing the signed and encoded transaction.
type SigningOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON of the packed transaction.
	JsonEncoded string `protobuf:"bytes,1,opt,name=json_encoded,json=jsonEncoded,proto3" json:"json_encoded,omitempty"`
	// Optional error
	Error common.SigningError `protobuf:"varint,2,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// error code description
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	mi := &file_EOS_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_EOS_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_EOS_proto_rawDescGZIP(), []int{2}
}

func (x *SigningOutput) GetJsonEncoded() string {
	if x != nil {
		return x.JsonEncoded
	}
	return ""
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_EOS_proto protoreflect.FileDescriptor

const file_EOS_proto_rawDesc = "" +
	"\n" +
	"\tEOS.proto\x12\fTW.EOS.Proto\x1a\fCommon.proto\"S\n" +
	"\x05Asset\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x03R\x06amount\x12\x1a\n" +
	"\bdecimals\x18\x02 \x01(\rR\bdecimals\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\"\x9c\x03\n" +
	"\fSigningInput\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\fR\achainId\x12,\n" +
	"\x12reference_block_id\x18\x02 \x01(\fR\x10referenceBlockId\x120\n" +
	"\x14reference_block_time\x18\x03 \x01(\x0fR\x12referenceBlockTime\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06sender\x18\x05 \x01(\tR\x06sender\x12\x1c\n" +
	"\trecipient\x18\x06 \x01(\tR\trecipient\x12\x12\n" +
	"\x04memo\x18\a \x01(\tR\x04memo\x12)\n" +
	"\x05asset\x18\b \x01(\v2\x13.TW.EOS.Proto.AssetR\x05asset\x12\x1f\n" +
	"\vprivate_key\x18\t \x01(\fR\n" +
	"privateKey\x12?\n" +
	"\x10private_key_type\x18\n" +
	" \x01(\x0e2\x15.TW.EOS.Proto.KeyTypeR\x0eprivateKeyType\x12\x1e\n" +
	"\n" +
	"expiration\x18\v \x01(\x0fR\n" +
	"expiration\"\x8c\x01\n" +
	"\rSigningOutput\x12!\n" +
	"\fjson_encoded\x18\x01 \x01(\tR\vjsonEncoded\x123\n" +
	"\x05error\x18\x02 \x01(\x0e2\x1d.TW.Common.Proto.SigningErrorR\x05error\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage*1\n" +
	"\aKeyType\x12\n" +
	"\n" +
	"\x06LEGACY\x10\x00\x12\f\n" +
	"\bMODERNK1\x10\x01\x12\f\n" +
	"\bMODERNR1\x10\x02B\x17\n" +
	"\x15wallet.core.jni.protob\x06proto3"

var (
	file_EOS_proto_rawDescOnce sync.Once
	file_EOS_proto_rawDescData []byte
)

func file_EOS_proto_rawDescGZIP() []byte {
	file_EOS_proto_rawDescOnce.Do(func() {
		file_EOS_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_EOS_proto_rawDesc), len(file_EOS_proto_rawDesc)))
	})
	return file_EOS_proto_rawDescData
}

var file_EOS_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_EOS_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_EOS_proto_goTypes = []any{
	(KeyType)(0),             // 0: TW.EOS.Proto.KeyType
	(*Asset)(nil),            // 1: TW.EOS.Proto.Asset
	(*SigningInput)(nil),     // 2: TW.EOS.Proto.SigningInput
	(*SigningOutput)(nil),    // 3: TW.EOS.Proto.SigningOutput
	(common.SigningError)(0), // 4: TW.Common.Proto.SigningError
}
var file_EOS_proto_depIdxs = []int32{
	1, // 0: TW.EOS.Proto.SigningInput.asset:type_name -> TW.EOS.Proto.Asset
	0, // 1: TW.EOS.Proto.SigningInput.private_key_type:type_name -> TW.EOS.Proto.KeyType
	4, // 2: TW.EOS.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_EOS_proto_init() }
func file_EOS_proto_init() {
	if File_EOS_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_EOS_proto_rawDesc), len(file_EOS_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_EOS_proto_goTypes,
		DependencyIndexes: file_EOS_proto_depIdxs,
		EnumInfos:         file_EOS_proto_enumTypes,
		MessageInfos:      file_EOS_proto_msgTypes,
	}.Build()
	File_EOS_proto = out.File
	file_EOS_proto_goTypes = nil
	file_EOS_proto_depIdxs = nil
}
