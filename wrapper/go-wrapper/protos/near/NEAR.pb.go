// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: NEAR.proto

package near

import (
	common "github.com/Cramiumlabs/wallet-core/wrapper/go-wrapper/protos/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Public key with type
type PublicKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Key type
	KeyType uint32 `protobuf:"varint,1,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	// The public key data
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	mi := &file_NEAR_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{0}
}

func (x *PublicKey) GetKeyType() uint32 {
	if x != nil {
		return x.KeyType
	}
	return 0
}

func (x *PublicKey) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Permissions for a function call
type FunctionCallPermission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// uint128 / big endian byte order
	Allowance     []byte   `protobuf:"bytes,1,opt,name=allowance,proto3" json:"allowance,omitempty"`
	ReceiverId    string   `protobuf:"bytes,2,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	MethodNames   []string `protobuf:"bytes,3,rep,name=method_names,json=methodNames,proto3" json:"method_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionCallPermission) Reset() {
	*x = FunctionCallPermission{}
	mi := &file_NEAR_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionCallPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionCallPermission) ProtoMessage() {}

func (x *FunctionCallPermission) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionCallPermission.ProtoReflect.Descriptor instead.
func (*FunctionCallPermission) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{1}
}

func (x *FunctionCallPermission) GetAllowance() []byte {
	if x != nil {
		return x.Allowance
	}
	return nil
}

func (x *FunctionCallPermission) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *FunctionCallPermission) GetMethodNames() []string {
	if x != nil {
		return x.MethodNames
	}
	return nil
}

// Full access
type FullAccessPermission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullAccessPermission) Reset() {
	*x = FullAccessPermission{}
	mi := &file_NEAR_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullAccessPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullAccessPermission) ProtoMessage() {}

func (x *FullAccessPermission) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullAccessPermission.ProtoReflect.Descriptor instead.
func (*FullAccessPermission) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{2}
}

// Access key: nonce + permission
type AccessKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Nonce
	Nonce uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Permission
	//
	// Types that are valid to be assigned to Permission:
	//
	//	*AccessKey_FunctionCall
	//	*AccessKey_FullAccess
	Permission    isAccessKey_Permission `protobuf_oneof:"permission"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessKey) Reset() {
	*x = AccessKey{}
	mi := &file_NEAR_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessKey) ProtoMessage() {}

func (x *AccessKey) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessKey.ProtoReflect.Descriptor instead.
func (*AccessKey) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{3}
}

func (x *AccessKey) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AccessKey) GetPermission() isAccessKey_Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *AccessKey) GetFunctionCall() *FunctionCallPermission {
	if x != nil {
		if x, ok := x.Permission.(*AccessKey_FunctionCall); ok {
			return x.FunctionCall
		}
	}
	return nil
}

func (x *AccessKey) GetFullAccess() *FullAccessPermission {
	if x != nil {
		if x, ok := x.Permission.(*AccessKey_FullAccess); ok {
			return x.FullAccess
		}
	}
	return nil
}

type isAccessKey_Permission interface {
	isAccessKey_Permission()
}

type AccessKey_FunctionCall struct {
	FunctionCall *FunctionCallPermission `protobuf:"bytes,2,opt,name=function_call,json=functionCall,proto3,oneof"`
}

type AccessKey_FullAccess struct {
	FullAccess *FullAccessPermission `protobuf:"bytes,3,opt,name=full_access,json=fullAccess,proto3,oneof"`
}

func (*AccessKey_FunctionCall) isAccessKey_Permission() {}

func (*AccessKey_FullAccess) isAccessKey_Permission() {}

// Create Account
type CreateAccount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccount) Reset() {
	*x = CreateAccount{}
	mi := &file_NEAR_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccount) ProtoMessage() {}

func (x *CreateAccount) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccount.ProtoReflect.Descriptor instead.
func (*CreateAccount) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{4}
}

// Deploying a contract
type DeployContract struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          []byte                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployContract) Reset() {
	*x = DeployContract{}
	mi := &file_NEAR_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployContract) ProtoMessage() {}

func (x *DeployContract) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployContract.ProtoReflect.Descriptor instead.
func (*DeployContract) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{5}
}

func (x *DeployContract) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

// A method/function call
type FunctionCall struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Method/function name
	MethodName string `protobuf:"bytes,1,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	// input arguments
	Args []byte `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
	// gas
	Gas uint64 `protobuf:"varint,3,opt,name=gas,proto3" json:"gas,omitempty"`
	// uint128 / big endian byte order
	Deposit       []byte `protobuf:"bytes,4,opt,name=deposit,proto3" json:"deposit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionCall) Reset() {
	*x = FunctionCall{}
	mi := &file_NEAR_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionCall) ProtoMessage() {}

func (x *FunctionCall) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionCall.ProtoReflect.Descriptor instead.
func (*FunctionCall) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{6}
}

func (x *FunctionCall) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *FunctionCall) GetArgs() []byte {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *FunctionCall) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *FunctionCall) GetDeposit() []byte {
	if x != nil {
		return x.Deposit
	}
	return nil
}

// Transfer
type Transfer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// amount; uint128 / big endian byte order
	Deposit       []byte `protobuf:"bytes,1,opt,name=deposit,proto3" json:"deposit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	mi := &file_NEAR_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{7}
}

func (x *Transfer) GetDeposit() []byte {
	if x != nil {
		return x.Deposit
	}
	return nil
}

// Stake
type Stake struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// amount; uint128 / big endian byte order
	Stake []byte `protobuf:"bytes,1,opt,name=stake,proto3" json:"stake,omitempty"`
	// owner public key
	PublicKey     *PublicKey `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stake) Reset() {
	*x = Stake{}
	mi := &file_NEAR_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stake) ProtoMessage() {}

func (x *Stake) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stake.ProtoReflect.Descriptor instead.
func (*Stake) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{8}
}

func (x *Stake) GetStake() []byte {
	if x != nil {
		return x.Stake
	}
	return nil
}

func (x *Stake) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Add a key
type AddKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     *PublicKey             `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	AccessKey     *AccessKey             `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddKey) Reset() {
	*x = AddKey{}
	mi := &file_NEAR_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddKey) ProtoMessage() {}

func (x *AddKey) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddKey.ProtoReflect.Descriptor instead.
func (*AddKey) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{9}
}

func (x *AddKey) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *AddKey) GetAccessKey() *AccessKey {
	if x != nil {
		return x.AccessKey
	}
	return nil
}

// Delete a key
type DeleteKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     *PublicKey             `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteKey) Reset() {
	*x = DeleteKey{}
	mi := &file_NEAR_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKey) ProtoMessage() {}

func (x *DeleteKey) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKey.ProtoReflect.Descriptor instead.
func (*DeleteKey) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteKey) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Delete account
type DeleteAccount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BeneficiaryId string                 `protobuf:"bytes,1,opt,name=beneficiary_id,json=beneficiaryId,proto3" json:"beneficiary_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAccount) Reset() {
	*x = DeleteAccount{}
	mi := &file_NEAR_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccount) ProtoMessage() {}

func (x *DeleteAccount) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccount.ProtoReflect.Descriptor instead.
func (*DeleteAccount) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteAccount) GetBeneficiaryId() string {
	if x != nil {
		return x.BeneficiaryId
	}
	return ""
}

// Fungible token transfer
type TokenTransfer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Token amount. Base-10 decimal string.
	TokenAmount string `protobuf:"bytes,1,opt,name=token_amount,json=tokenAmount,proto3" json:"token_amount,omitempty"`
	// ID of the receiver.
	ReceiverId string `protobuf:"bytes,2,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	// Gas.
	Gas uint64 `protobuf:"varint,3,opt,name=gas,proto3" json:"gas,omitempty"`
	// NEAR deposit amount; uint128 / big endian byte order.
	Deposit       []byte `protobuf:"bytes,4,opt,name=deposit,proto3" json:"deposit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenTransfer) Reset() {
	*x = TokenTransfer{}
	mi := &file_NEAR_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenTransfer) ProtoMessage() {}

func (x *TokenTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenTransfer.ProtoReflect.Descriptor instead.
func (*TokenTransfer) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{12}
}

func (x *TokenTransfer) GetTokenAmount() string {
	if x != nil {
		return x.TokenAmount
	}
	return ""
}

func (x *TokenTransfer) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *TokenTransfer) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *TokenTransfer) GetDeposit() []byte {
	if x != nil {
		return x.Deposit
	}
	return nil
}

// Represents an action
type Action struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Action_CreateAccount
	//	*Action_DeployContract
	//	*Action_FunctionCall
	//	*Action_Transfer
	//	*Action_Stake
	//	*Action_AddKey
	//	*Action_DeleteKey
	//	*Action_DeleteAccount
	//	*Action_TokenTransfer
	Payload       isAction_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_NEAR_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{13}
}

func (x *Action) GetPayload() isAction_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Action) GetCreateAccount() *CreateAccount {
	if x != nil {
		if x, ok := x.Payload.(*Action_CreateAccount); ok {
			return x.CreateAccount
		}
	}
	return nil
}

func (x *Action) GetDeployContract() *DeployContract {
	if x != nil {
		if x, ok := x.Payload.(*Action_DeployContract); ok {
			return x.DeployContract
		}
	}
	return nil
}

func (x *Action) GetFunctionCall() *FunctionCall {
	if x != nil {
		if x, ok := x.Payload.(*Action_FunctionCall); ok {
			return x.FunctionCall
		}
	}
	return nil
}

func (x *Action) GetTransfer() *Transfer {
	if x != nil {
		if x, ok := x.Payload.(*Action_Transfer); ok {
			return x.Transfer
		}
	}
	return nil
}

func (x *Action) GetStake() *Stake {
	if x != nil {
		if x, ok := x.Payload.(*Action_Stake); ok {
			return x.Stake
		}
	}
	return nil
}

func (x *Action) GetAddKey() *AddKey {
	if x != nil {
		if x, ok := x.Payload.(*Action_AddKey); ok {
			return x.AddKey
		}
	}
	return nil
}

func (x *Action) GetDeleteKey() *DeleteKey {
	if x != nil {
		if x, ok := x.Payload.(*Action_DeleteKey); ok {
			return x.DeleteKey
		}
	}
	return nil
}

func (x *Action) GetDeleteAccount() *DeleteAccount {
	if x != nil {
		if x, ok := x.Payload.(*Action_DeleteAccount); ok {
			return x.DeleteAccount
		}
	}
	return nil
}

func (x *Action) GetTokenTransfer() *TokenTransfer {
	if x != nil {
		if x, ok := x.Payload.(*Action_TokenTransfer); ok {
			return x.TokenTransfer
		}
	}
	return nil
}

type isAction_Payload interface {
	isAction_Payload()
}

type Action_CreateAccount struct {
	CreateAccount *CreateAccount `protobuf:"bytes,1,opt,name=create_account,json=createAccount,proto3,oneof"`
}

type Action_DeployContract struct {
	DeployContract *DeployContract `protobuf:"bytes,2,opt,name=deploy_contract,json=deployContract,proto3,oneof"`
}

type Action_FunctionCall struct {
	FunctionCall *FunctionCall `protobuf:"bytes,3,opt,name=function_call,json=functionCall,proto3,oneof"`
}

type Action_Transfer struct {
	Transfer *Transfer `protobuf:"bytes,4,opt,name=transfer,proto3,oneof"`
}

type Action_Stake struct {
	Stake *Stake `protobuf:"bytes,5,opt,name=stake,proto3,oneof"`
}

type Action_AddKey struct {
	AddKey *AddKey `protobuf:"bytes,6,opt,name=add_key,json=addKey,proto3,oneof"`
}

type Action_DeleteKey struct {
	DeleteKey *DeleteKey `protobuf:"bytes,7,opt,name=delete_key,json=deleteKey,proto3,oneof"`
}

type Action_DeleteAccount struct {
	DeleteAccount *DeleteAccount `protobuf:"bytes,8,opt,name=delete_account,json=deleteAccount,proto3,oneof"`
}

type Action_TokenTransfer struct {
	// Gap in field numbering is intentional as it's not a standard NEAR action.
	TokenTransfer *TokenTransfer `protobuf:"bytes,13,opt,name=token_transfer,json=tokenTransfer,proto3,oneof"`
}

func (*Action_CreateAccount) isAction_Payload() {}

func (*Action_DeployContract) isAction_Payload() {}

func (*Action_FunctionCall) isAction_Payload() {}

func (*Action_Transfer) isAction_Payload() {}

func (*Action_Stake) isAction_Payload() {}

func (*Action_AddKey) isAction_Payload() {}

func (*Action_DeleteKey) isAction_Payload() {}

func (*Action_DeleteAccount) isAction_Payload() {}

func (*Action_TokenTransfer) isAction_Payload() {}

// Input data necessary to create a signed order.
type SigningInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the sender
	SignerId string `protobuf:"bytes,1,opt,name=signer_id,json=signerId,proto3" json:"signer_id,omitempty"`
	// Nonce (should be larger than in the last transaction of the account)
	Nonce uint64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// ID of the receiver
	ReceiverId string `protobuf:"bytes,3,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	// Recent block hash
	BlockHash []byte `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// Payload action(s)
	Actions []*Action `protobuf:"bytes,5,rep,name=actions,proto3" json:"actions,omitempty"`
	// The secret private key used for signing (32 bytes).
	PrivateKey []byte `protobuf:"bytes,6,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// The public key used for compiling a transaction with a signature.
	PublicKey     []byte `protobuf:"bytes,7,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	mi := &file_NEAR_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{14}
}

func (x *SigningInput) GetSignerId() string {
	if x != nil {
		return x.SignerId
	}
	return ""
}

func (x *SigningInput) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SigningInput) GetReceiverId() string {
	if x != nil {
		return x.ReceiverId
	}
	return ""
}

func (x *SigningInput) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *SigningInput) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *SigningInput) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Result containing the signed and encoded transaction.
type SigningOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Signed transaction blob
	SignedTransaction []byte `protobuf:"bytes,1,opt,name=signed_transaction,json=signedTransaction,proto3" json:"signed_transaction,omitempty"`
	// error code, 0 is ok, other codes will be treated as errors
	Error common.SigningError `protobuf:"varint,2,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// error code description
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Hash of the transaction
	Hash          []byte `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	mi := &file_NEAR_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_NEAR_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_NEAR_proto_rawDescGZIP(), []int{15}
}

func (x *SigningOutput) GetSignedTransaction() []byte {
	if x != nil {
		return x.SignedTransaction
	}
	return nil
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SigningOutput) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

var File_NEAR_proto protoreflect.FileDescriptor

const file_NEAR_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"NEAR.proto\x12\rTW.NEAR.Proto\x1a\fCommon.proto\":\n" +
	"\tPublicKey\x12\x19\n" +
	"\bkey_type\x18\x01 \x01(\rR\akeyType\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"z\n" +
	"\x16FunctionCallPermission\x12\x1c\n" +
	"\tallowance\x18\x01 \x01(\fR\tallowance\x12\x1f\n" +
	"\vreceiver_id\x18\x02 \x01(\tR\n" +
	"receiverId\x12!\n" +
	"\fmethod_names\x18\x03 \x03(\tR\vmethodNames\"\x16\n" +
	"\x14FullAccessPermission\"\xc5\x01\n" +
	"\tAccessKey\x12\x14\n" +
	"\x05nonce\x18\x01 \x01(\x04R\x05nonce\x12L\n" +
	"\rfunction_call\x18\x02 \x01(\v2%.TW.NEAR.Proto.FunctionCallPermissionH\x00R\ffunctionCall\x12F\n" +
	"\vfull_access\x18\x03 \x01(\v2#.TW.NEAR.Proto.FullAccessPermissionH\x00R\n" +
	"fullAccessB\f\n" +
	"\n" +
	"permission\"\x0f\n" +
	"\rCreateAccount\"$\n" +
	"\x0eDeployContract\x12\x12\n" +
	"\x04code\x18\x01 \x01(\fR\x04code\"o\n" +
	"\fFunctionCall\x12\x1f\n" +
	"\vmethod_name\x18\x01 \x01(\tR\n" +
	"methodName\x12\x12\n" +
	"\x04args\x18\x02 \x01(\fR\x04args\x12\x10\n" +
	"\x03gas\x18\x03 \x01(\x04R\x03gas\x12\x18\n" +
	"\adeposit\x18\x04 \x01(\fR\adeposit\"$\n" +
	"\bTransfer\x12\x18\n" +
	"\adeposit\x18\x01 \x01(\fR\adeposit\"V\n" +
	"\x05Stake\x12\x14\n" +
	"\x05stake\x18\x01 \x01(\fR\x05stake\x127\n" +
	"\n" +
	"public_key\x18\x02 \x01(\v2\x18.TW.NEAR.Proto.PublicKeyR\tpublicKey\"z\n" +
	"\x06AddKey\x127\n" +
	"\n" +
	"public_key\x18\x01 \x01(\v2\x18.TW.NEAR.Proto.PublicKeyR\tpublicKey\x127\n" +
	"\n" +
	"access_key\x18\x02 \x01(\v2\x18.TW.NEAR.Proto.AccessKeyR\taccessKey\"D\n" +
	"\tDeleteKey\x127\n" +
	"\n" +
	"public_key\x18\x01 \x01(\v2\x18.TW.NEAR.Proto.PublicKeyR\tpublicKey\"6\n" +
	"\rDeleteAccount\x12%\n" +
	"\x0ebeneficiary_id\x18\x01 \x01(\tR\rbeneficiaryId\"\x7f\n" +
	"\rTokenTransfer\x12!\n" +
	"\ftoken_amount\x18\x01 \x01(\tR\vtokenAmount\x12\x1f\n" +
	"\vreceiver_id\x18\x02 \x01(\tR\n" +
	"receiverId\x12\x10\n" +
	"\x03gas\x18\x03 \x01(\x04R\x03gas\x12\x18\n" +
	"\adeposit\x18\x04 \x01(\fR\adeposit\"\xc8\x04\n" +
	"\x06Action\x12E\n" +
	"\x0ecreate_account\x18\x01 \x01(\v2\x1c.TW.NEAR.Proto.CreateAccountH\x00R\rcreateAccount\x12H\n" +
	"\x0fdeploy_contract\x18\x02 \x01(\v2\x1d.TW.NEAR.Proto.DeployContractH\x00R\x0edeployContract\x12B\n" +
	"\rfunction_call\x18\x03 \x01(\v2\x1b.TW.NEAR.Proto.FunctionCallH\x00R\ffunctionCall\x125\n" +
	"\btransfer\x18\x04 \x01(\v2\x17.TW.NEAR.Proto.TransferH\x00R\btransfer\x12,\n" +
	"\x05stake\x18\x05 \x01(\v2\x14.TW.NEAR.Proto.StakeH\x00R\x05stake\x120\n" +
	"\aadd_key\x18\x06 \x01(\v2\x15.TW.NEAR.Proto.AddKeyH\x00R\x06addKey\x129\n" +
	"\n" +
	"delete_key\x18\a \x01(\v2\x18.TW.NEAR.Proto.DeleteKeyH\x00R\tdeleteKey\x12E\n" +
	"\x0edelete_account\x18\b \x01(\v2\x1c.TW.NEAR.Proto.DeleteAccountH\x00R\rdeleteAccount\x12E\n" +
	"\x0etoken_transfer\x18\r \x01(\v2\x1c.TW.NEAR.Proto.TokenTransferH\x00R\rtokenTransferB\t\n" +
	"\apayload\"\xf2\x01\n" +
	"\fSigningInput\x12\x1b\n" +
	"\tsigner_id\x18\x01 \x01(\tR\bsignerId\x12\x14\n" +
	"\x05nonce\x18\x02 \x01(\x04R\x05nonce\x12\x1f\n" +
	"\vreceiver_id\x18\x03 \x01(\tR\n" +
	"receiverId\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x04 \x01(\fR\tblockHash\x12/\n" +
	"\aactions\x18\x05 \x03(\v2\x15.TW.NEAR.Proto.ActionR\aactions\x12\x1f\n" +
	"\vprivate_key\x18\x06 \x01(\fR\n" +
	"privateKey\x12\x1d\n" +
	"\n" +
	"public_key\x18\a \x01(\fR\tpublicKey\"\xac\x01\n" +
	"\rSigningOutput\x12-\n" +
	"\x12signed_transaction\x18\x01 \x01(\fR\x11signedTransaction\x123\n" +
	"\x05error\x18\x02 \x01(\x0e2\x1d.TW.Common.Proto.SigningErrorR\x05error\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12\x12\n" +
	"\x04hash\x18\x04 \x01(\fR\x04hashB\x17\n" +
	"\x15wallet.core.jni.protob\x06proto3"

var (
	file_NEAR_proto_rawDescOnce sync.Once
	file_NEAR_proto_rawDescData []byte
)

func file_NEAR_proto_rawDescGZIP() []byte {
	file_NEAR_proto_rawDescOnce.Do(func() {
		file_NEAR_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_NEAR_proto_rawDesc), len(file_NEAR_proto_rawDesc)))
	})
	return file_NEAR_proto_rawDescData
}

var file_NEAR_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_NEAR_proto_goTypes = []any{
	(*PublicKey)(nil),              // 0: TW.NEAR.Proto.PublicKey
	(*FunctionCallPermission)(nil), // 1: TW.NEAR.Proto.FunctionCallPermission
	(*FullAccessPermission)(nil),   // 2: TW.NEAR.Proto.FullAccessPermission
	(*AccessKey)(nil),              // 3: TW.NEAR.Proto.AccessKey
	(*CreateAccount)(nil),          // 4: TW.NEAR.Proto.CreateAccount
	(*DeployContract)(nil),         // 5: TW.NEAR.Proto.DeployContract
	(*FunctionCall)(nil),           // 6: TW.NEAR.Proto.FunctionCall
	(*Transfer)(nil),               // 7: TW.NEAR.Proto.Transfer
	(*Stake)(nil),                  // 8: TW.NEAR.Proto.Stake
	(*AddKey)(nil),                 // 9: TW.NEAR.Proto.AddKey
	(*DeleteKey)(nil),              // 10: TW.NEAR.Proto.DeleteKey
	(*DeleteAccount)(nil),          // 11: TW.NEAR.Proto.DeleteAccount
	(*TokenTransfer)(nil),          // 12: TW.NEAR.Proto.TokenTransfer
	(*Action)(nil),                 // 13: TW.NEAR.Proto.Action
	(*SigningInput)(nil),           // 14: TW.NEAR.Proto.SigningInput
	(*SigningOutput)(nil),          // 15: TW.NEAR.Proto.SigningOutput
	(common.SigningError)(0),       // 16: TW.Common.Proto.SigningError
}
var file_NEAR_proto_depIdxs = []int32{
	1,  // 0: TW.NEAR.Proto.AccessKey.function_call:type_name -> TW.NEAR.Proto.FunctionCallPermission
	2,  // 1: TW.NEAR.Proto.AccessKey.full_access:type_name -> TW.NEAR.Proto.FullAccessPermission
	0,  // 2: TW.NEAR.Proto.Stake.public_key:type_name -> TW.NEAR.Proto.PublicKey
	0,  // 3: TW.NEAR.Proto.AddKey.public_key:type_name -> TW.NEAR.Proto.PublicKey
	3,  // 4: TW.NEAR.Proto.AddKey.access_key:type_name -> TW.NEAR.Proto.AccessKey
	0,  // 5: TW.NEAR.Proto.DeleteKey.public_key:type_name -> TW.NEAR.Proto.PublicKey
	4,  // 6: TW.NEAR.Proto.Action.create_account:type_name -> TW.NEAR.Proto.CreateAccount
	5,  // 7: TW.NEAR.Proto.Action.deploy_contract:type_name -> TW.NEAR.Proto.DeployContract
	6,  // 8: TW.NEAR.Proto.Action.function_call:type_name -> TW.NEAR.Proto.FunctionCall
	7,  // 9: TW.NEAR.Proto.Action.transfer:type_name -> TW.NEAR.Proto.Transfer
	8,  // 10: TW.NEAR.Proto.Action.stake:type_name -> TW.NEAR.Proto.Stake
	9,  // 11: TW.NEAR.Proto.Action.add_key:type_name -> TW.NEAR.Proto.AddKey
	10, // 12: TW.NEAR.Proto.Action.delete_key:type_name -> TW.NEAR.Proto.DeleteKey
	11, // 13: TW.NEAR.Proto.Action.delete_account:type_name -> TW.NEAR.Proto.DeleteAccount
	12, // 14: TW.NEAR.Proto.Action.token_transfer:type_name -> TW.NEAR.Proto.TokenTransfer
	13, // 15: TW.NEAR.Proto.SigningInput.actions:type_name -> TW.NEAR.Proto.Action
	16, // 16: TW.NEAR.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_NEAR_proto_init() }
func file_NEAR_proto_init() {
	if File_NEAR_proto != nil {
		return
	}
	file_NEAR_proto_msgTypes[3].OneofWrappers = []any{
		(*AccessKey_FunctionCall)(nil),
		(*AccessKey_FullAccess)(nil),
	}
	file_NEAR_proto_msgTypes[13].OneofWrappers = []any{
		(*Action_CreateAccount)(nil),
		(*Action_DeployContract)(nil),
		(*Action_FunctionCall)(nil),
		(*Action_Transfer)(nil),
		(*Action_Stake)(nil),
		(*Action_AddKey)(nil),
		(*Action_DeleteKey)(nil),
		(*Action_DeleteAccount)(nil),
		(*Action_TokenTransfer)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_NEAR_proto_rawDesc), len(file_NEAR_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_NEAR_proto_goTypes,
		DependencyIndexes: file_NEAR_proto_depIdxs,
		MessageInfos:      file_NEAR_proto_msgTypes,
	}.Build()
	File_NEAR_proto = out.File
	file_NEAR_proto_goTypes = nil
	file_NEAR_proto_depIdxs = nil
}
