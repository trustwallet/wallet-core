// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.20.3
// source: Tezos.proto

package tezos

import (
	common "github.com/Cramiumlabs/wallet-core/wrapper/go-wrapper/protos/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Operation types
type Operation_OperationKind int32

const (
	// Note: Proto3 semantics require a zero value.
	Operation_ENDORSEMENT Operation_OperationKind = 0
	Operation_REVEAL      Operation_OperationKind = 107
	Operation_TRANSACTION Operation_OperationKind = 108
	Operation_DELEGATION  Operation_OperationKind = 110
)

// Enum value maps for Operation_OperationKind.
var (
	Operation_OperationKind_name = map[int32]string{
		0:   "ENDORSEMENT",
		107: "REVEAL",
		108: "TRANSACTION",
		110: "DELEGATION",
	}
	Operation_OperationKind_value = map[string]int32{
		"ENDORSEMENT": 0,
		"REVEAL":      107,
		"TRANSACTION": 108,
		"DELEGATION":  110,
	}
)

func (x Operation_OperationKind) Enum() *Operation_OperationKind {
	p := new(Operation_OperationKind)
	*p = x
	return p
}

func (x Operation_OperationKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation_OperationKind) Descriptor() protoreflect.EnumDescriptor {
	return file_Tezos_proto_enumTypes[0].Descriptor()
}

func (Operation_OperationKind) Type() protoreflect.EnumType {
	return &file_Tezos_proto_enumTypes[0]
}

func (x Operation_OperationKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation_OperationKind.Descriptor instead.
func (Operation_OperationKind) EnumDescriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{3, 0}
}

// Input data necessary to create a signed Tezos transaction.
// Next field: 3
type SigningInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// One or more operations
	OperationList *OperationList `protobuf:"bytes,1,opt,name=operation_list,json=operationList,proto3" json:"operation_list,omitempty"`
	// Encoded operation bytes obtained with $RPC_URL/chains/main/blocks/head/helpers/forge/operations, operation_list will be ignored.
	EncodedOperations []byte `protobuf:"bytes,2,opt,name=encoded_operations,json=encodedOperations,proto3" json:"encoded_operations,omitempty"`
	// The secret private key used for signing (32 bytes).
	PrivateKey    []byte `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningInput) Reset() {
	*x = SigningInput{}
	mi := &file_Tezos_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningInput) ProtoMessage() {}

func (x *SigningInput) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningInput.ProtoReflect.Descriptor instead.
func (*SigningInput) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{0}
}

func (x *SigningInput) GetOperationList() *OperationList {
	if x != nil {
		return x.OperationList
	}
	return nil
}

func (x *SigningInput) GetEncodedOperations() []byte {
	if x != nil {
		return x.EncodedOperations
	}
	return nil
}

func (x *SigningInput) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

// Result containing the signed and encoded transaction.
// Next field: 2
type SigningOutput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The encoded transaction
	Encoded []byte `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
	// error code, 0 is ok, other codes will be treated as errors
	Error common.SigningError `protobuf:"varint,2,opt,name=error,proto3,enum=TW.Common.Proto.SigningError" json:"error,omitempty"`
	// error code description
	ErrorMessage  string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SigningOutput) Reset() {
	*x = SigningOutput{}
	mi := &file_Tezos_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SigningOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigningOutput) ProtoMessage() {}

func (x *SigningOutput) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigningOutput.ProtoReflect.Descriptor instead.
func (*SigningOutput) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{1}
}

func (x *SigningOutput) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

func (x *SigningOutput) GetError() common.SigningError {
	if x != nil {
		return x.Error
	}
	return common.SigningError(0)
}

func (x *SigningOutput) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// A list of operations and a branch.
// Next field: 3
type OperationList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// branch
	Branch string `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
	// list of operations
	Operations    []*Operation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationList) Reset() {
	*x = OperationList{}
	mi := &file_Tezos_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationList) ProtoMessage() {}

func (x *OperationList) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationList.ProtoReflect.Descriptor instead.
func (*OperationList) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{2}
}

func (x *OperationList) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *OperationList) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

// An operation that can be applied to the Tezos blockchain.
// Next field: 12
type Operation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// counter
	Counter int64 `protobuf:"varint,1,opt,name=counter,proto3" json:"counter,omitempty"`
	// source account
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// fee
	Fee int64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	// gas limit
	GasLimit int64 `protobuf:"varint,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	// storage limit
	StorageLimit int64 `protobuf:"varint,5,opt,name=storage_limit,json=storageLimit,proto3" json:"storage_limit,omitempty"`
	// Operation type
	Kind Operation_OperationKind `protobuf:"varint,7,opt,name=kind,proto3,enum=TW.Tezos.Proto.Operation_OperationKind" json:"kind,omitempty"`
	// Operation specific data depending on the type of the operation.
	//
	// Types that are valid to be assigned to OperationData:
	//
	//	*Operation_RevealOperationData
	//	*Operation_TransactionOperationData
	//	*Operation_DelegationOperationData
	OperationData isOperation_OperationData `protobuf_oneof:"operation_data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Operation) Reset() {
	*x = Operation{}
	mi := &file_Tezos_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{3}
}

func (x *Operation) GetCounter() int64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *Operation) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Operation) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Operation) GetGasLimit() int64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *Operation) GetStorageLimit() int64 {
	if x != nil {
		return x.StorageLimit
	}
	return 0
}

func (x *Operation) GetKind() Operation_OperationKind {
	if x != nil {
		return x.Kind
	}
	return Operation_ENDORSEMENT
}

func (x *Operation) GetOperationData() isOperation_OperationData {
	if x != nil {
		return x.OperationData
	}
	return nil
}

func (x *Operation) GetRevealOperationData() *RevealOperationData {
	if x != nil {
		if x, ok := x.OperationData.(*Operation_RevealOperationData); ok {
			return x.RevealOperationData
		}
	}
	return nil
}

func (x *Operation) GetTransactionOperationData() *TransactionOperationData {
	if x != nil {
		if x, ok := x.OperationData.(*Operation_TransactionOperationData); ok {
			return x.TransactionOperationData
		}
	}
	return nil
}

func (x *Operation) GetDelegationOperationData() *DelegationOperationData {
	if x != nil {
		if x, ok := x.OperationData.(*Operation_DelegationOperationData); ok {
			return x.DelegationOperationData
		}
	}
	return nil
}

type isOperation_OperationData interface {
	isOperation_OperationData()
}

type Operation_RevealOperationData struct {
	RevealOperationData *RevealOperationData `protobuf:"bytes,8,opt,name=reveal_operation_data,json=revealOperationData,proto3,oneof"`
}

type Operation_TransactionOperationData struct {
	TransactionOperationData *TransactionOperationData `protobuf:"bytes,9,opt,name=transaction_operation_data,json=transactionOperationData,proto3,oneof"`
}

type Operation_DelegationOperationData struct {
	DelegationOperationData *DelegationOperationData `protobuf:"bytes,11,opt,name=delegation_operation_data,json=delegationOperationData,proto3,oneof"`
}

func (*Operation_RevealOperationData) isOperation_OperationData() {}

func (*Operation_TransactionOperationData) isOperation_OperationData() {}

func (*Operation_DelegationOperationData) isOperation_OperationData() {}

type FA12Parameters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entrypoint    string                 `protobuf:"bytes,1,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	From          string                 `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To            string                 `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Value         string                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FA12Parameters) Reset() {
	*x = FA12Parameters{}
	mi := &file_Tezos_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FA12Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FA12Parameters) ProtoMessage() {}

func (x *FA12Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FA12Parameters.ProtoReflect.Descriptor instead.
func (*FA12Parameters) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{4}
}

func (x *FA12Parameters) GetEntrypoint() string {
	if x != nil {
		return x.Entrypoint
	}
	return ""
}

func (x *FA12Parameters) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *FA12Parameters) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *FA12Parameters) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Txs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	TokenId       string                 `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Txs) Reset() {
	*x = Txs{}
	mi := &file_Tezos_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Txs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Txs) ProtoMessage() {}

func (x *Txs) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Txs.ProtoReflect.Descriptor instead.
func (*Txs) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{5}
}

func (x *Txs) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Txs) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *Txs) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type TxObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Txs           []*Txs                 `protobuf:"bytes,2,rep,name=txs,proto3" json:"txs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxObject) Reset() {
	*x = TxObject{}
	mi := &file_Tezos_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxObject) ProtoMessage() {}

func (x *TxObject) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxObject.ProtoReflect.Descriptor instead.
func (*TxObject) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{6}
}

func (x *TxObject) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TxObject) GetTxs() []*Txs {
	if x != nil {
		return x.Txs
	}
	return nil
}

type FA2Parameters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entrypoint    string                 `protobuf:"bytes,1,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	TxsObject     []*TxObject            `protobuf:"bytes,2,rep,name=txs_object,json=txsObject,proto3" json:"txs_object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FA2Parameters) Reset() {
	*x = FA2Parameters{}
	mi := &file_Tezos_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FA2Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FA2Parameters) ProtoMessage() {}

func (x *FA2Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FA2Parameters.ProtoReflect.Descriptor instead.
func (*FA2Parameters) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{7}
}

func (x *FA2Parameters) GetEntrypoint() string {
	if x != nil {
		return x.Entrypoint
	}
	return ""
}

func (x *FA2Parameters) GetTxsObject() []*TxObject {
	if x != nil {
		return x.TxsObject
	}
	return nil
}

// Generic operation parameters
type OperationParameters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Parameters:
	//
	//	*OperationParameters_Fa12Parameters
	//	*OperationParameters_Fa2Parameters
	Parameters    isOperationParameters_Parameters `protobuf_oneof:"parameters"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationParameters) Reset() {
	*x = OperationParameters{}
	mi := &file_Tezos_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationParameters) ProtoMessage() {}

func (x *OperationParameters) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationParameters.ProtoReflect.Descriptor instead.
func (*OperationParameters) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{8}
}

func (x *OperationParameters) GetParameters() isOperationParameters_Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *OperationParameters) GetFa12Parameters() *FA12Parameters {
	if x != nil {
		if x, ok := x.Parameters.(*OperationParameters_Fa12Parameters); ok {
			return x.Fa12Parameters
		}
	}
	return nil
}

func (x *OperationParameters) GetFa2Parameters() *FA2Parameters {
	if x != nil {
		if x, ok := x.Parameters.(*OperationParameters_Fa2Parameters); ok {
			return x.Fa2Parameters
		}
	}
	return nil
}

type isOperationParameters_Parameters interface {
	isOperationParameters_Parameters()
}

type OperationParameters_Fa12Parameters struct {
	Fa12Parameters *FA12Parameters `protobuf:"bytes,1,opt,name=fa12_parameters,json=fa12Parameters,proto3,oneof"`
}

type OperationParameters_Fa2Parameters struct {
	Fa2Parameters *FA2Parameters `protobuf:"bytes,2,opt,name=fa2_parameters,json=fa2Parameters,proto3,oneof"`
}

func (*OperationParameters_Fa12Parameters) isOperationParameters_Parameters() {}

func (*OperationParameters_Fa2Parameters) isOperationParameters_Parameters() {}

// Transaction operation specific data.
// Next field: 3
type TransactionOperationData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Destination      string                 `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Amount           int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	EncodedParameter []byte                 `protobuf:"bytes,3,opt,name=encoded_parameter,json=encodedParameter,proto3" json:"encoded_parameter,omitempty"`
	Parameters       *OperationParameters   `protobuf:"bytes,4,opt,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TransactionOperationData) Reset() {
	*x = TransactionOperationData{}
	mi := &file_Tezos_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionOperationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionOperationData) ProtoMessage() {}

func (x *TransactionOperationData) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionOperationData.ProtoReflect.Descriptor instead.
func (*TransactionOperationData) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{9}
}

func (x *TransactionOperationData) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *TransactionOperationData) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransactionOperationData) GetEncodedParameter() []byte {
	if x != nil {
		return x.EncodedParameter
	}
	return nil
}

func (x *TransactionOperationData) GetParameters() *OperationParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// Reveal operation specific data.
// Next field: 2
type RevealOperationData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     []byte                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevealOperationData) Reset() {
	*x = RevealOperationData{}
	mi := &file_Tezos_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevealOperationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevealOperationData) ProtoMessage() {}

func (x *RevealOperationData) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevealOperationData.ProtoReflect.Descriptor instead.
func (*RevealOperationData) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{10}
}

func (x *RevealOperationData) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Delegation operation specific data.
// Next field: 2
type DelegationOperationData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Delegate      string                 `protobuf:"bytes,1,opt,name=delegate,proto3" json:"delegate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelegationOperationData) Reset() {
	*x = DelegationOperationData{}
	mi := &file_Tezos_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegationOperationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationOperationData) ProtoMessage() {}

func (x *DelegationOperationData) ProtoReflect() protoreflect.Message {
	mi := &file_Tezos_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegationOperationData.ProtoReflect.Descriptor instead.
func (*DelegationOperationData) Descriptor() ([]byte, []int) {
	return file_Tezos_proto_rawDescGZIP(), []int{11}
}

func (x *DelegationOperationData) GetDelegate() string {
	if x != nil {
		return x.Delegate
	}
	return ""
}

var File_Tezos_proto protoreflect.FileDescriptor

const file_Tezos_proto_rawDesc = "" +
	"\n" +
	"\vTezos.proto\x12\x0eTW.Tezos.Proto\x1a\fCommon.proto\"\xa4\x01\n" +
	"\fSigningInput\x12D\n" +
	"\x0eoperation_list\x18\x01 \x01(\v2\x1d.TW.Tezos.Proto.OperationListR\roperationList\x12-\n" +
	"\x12encoded_operations\x18\x02 \x01(\fR\x11encodedOperations\x12\x1f\n" +
	"\vprivate_key\x18\x03 \x01(\fR\n" +
	"privateKey\"\x83\x01\n" +
	"\rSigningOutput\x12\x18\n" +
	"\aencoded\x18\x01 \x01(\fR\aencoded\x123\n" +
	"\x05error\x18\x02 \x01(\x0e2\x1d.TW.Common.Proto.SigningErrorR\x05error\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"b\n" +
	"\rOperationList\x12\x16\n" +
	"\x06branch\x18\x01 \x01(\tR\x06branch\x129\n" +
	"\n" +
	"operations\x18\x02 \x03(\v2\x19.TW.Tezos.Proto.OperationR\n" +
	"operations\"\xdb\x04\n" +
	"\tOperation\x12\x18\n" +
	"\acounter\x18\x01 \x01(\x03R\acounter\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x10\n" +
	"\x03fee\x18\x03 \x01(\x03R\x03fee\x12\x1b\n" +
	"\tgas_limit\x18\x04 \x01(\x03R\bgasLimit\x12#\n" +
	"\rstorage_limit\x18\x05 \x01(\x03R\fstorageLimit\x12;\n" +
	"\x04kind\x18\a \x01(\x0e2'.TW.Tezos.Proto.Operation.OperationKindR\x04kind\x12Y\n" +
	"\x15reveal_operation_data\x18\b \x01(\v2#.TW.Tezos.Proto.RevealOperationDataH\x00R\x13revealOperationData\x12h\n" +
	"\x1atransaction_operation_data\x18\t \x01(\v2(.TW.Tezos.Proto.TransactionOperationDataH\x00R\x18transactionOperationData\x12e\n" +
	"\x19delegation_operation_data\x18\v \x01(\v2'.TW.Tezos.Proto.DelegationOperationDataH\x00R\x17delegationOperationData\"M\n" +
	"\rOperationKind\x12\x0f\n" +
	"\vENDORSEMENT\x10\x00\x12\n" +
	"\n" +
	"\x06REVEAL\x10k\x12\x0f\n" +
	"\vTRANSACTION\x10l\x12\x0e\n" +
	"\n" +
	"DELEGATION\x10nB\x10\n" +
	"\x0eoperation_data\"j\n" +
	"\x0eFA12Parameters\x12\x1e\n" +
	"\n" +
	"entrypoint\x18\x01 \x01(\tR\n" +
	"entrypoint\x12\x12\n" +
	"\x04from\x18\x02 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x03 \x01(\tR\x02to\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\"H\n" +
	"\x03Txs\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x19\n" +
	"\btoken_id\x18\x02 \x01(\tR\atokenId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\"E\n" +
	"\bTxObject\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12%\n" +
	"\x03txs\x18\x02 \x03(\v2\x13.TW.Tezos.Proto.TxsR\x03txs\"h\n" +
	"\rFA2Parameters\x12\x1e\n" +
	"\n" +
	"entrypoint\x18\x01 \x01(\tR\n" +
	"entrypoint\x127\n" +
	"\n" +
	"txs_object\x18\x02 \x03(\v2\x18.TW.Tezos.Proto.TxObjectR\ttxsObject\"\xb6\x01\n" +
	"\x13OperationParameters\x12I\n" +
	"\x0ffa12_parameters\x18\x01 \x01(\v2\x1e.TW.Tezos.Proto.FA12ParametersH\x00R\x0efa12Parameters\x12F\n" +
	"\x0efa2_parameters\x18\x02 \x01(\v2\x1d.TW.Tezos.Proto.FA2ParametersH\x00R\rfa2ParametersB\f\n" +
	"\n" +
	"parameters\"\xc6\x01\n" +
	"\x18TransactionOperationData\x12 \n" +
	"\vdestination\x18\x01 \x01(\tR\vdestination\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\x12+\n" +
	"\x11encoded_parameter\x18\x03 \x01(\fR\x10encodedParameter\x12C\n" +
	"\n" +
	"parameters\x18\x04 \x01(\v2#.TW.Tezos.Proto.OperationParametersR\n" +
	"parameters\"4\n" +
	"\x13RevealOperationData\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\fR\tpublicKey\"5\n" +
	"\x17DelegationOperationData\x12\x1a\n" +
	"\bdelegate\x18\x01 \x01(\tR\bdelegateB\x17\n" +
	"\x15wallet.core.jni.protob\x06proto3"

var (
	file_Tezos_proto_rawDescOnce sync.Once
	file_Tezos_proto_rawDescData []byte
)

func file_Tezos_proto_rawDescGZIP() []byte {
	file_Tezos_proto_rawDescOnce.Do(func() {
		file_Tezos_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Tezos_proto_rawDesc), len(file_Tezos_proto_rawDesc)))
	})
	return file_Tezos_proto_rawDescData
}

var file_Tezos_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Tezos_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_Tezos_proto_goTypes = []any{
	(Operation_OperationKind)(0),     // 0: TW.Tezos.Proto.Operation.OperationKind
	(*SigningInput)(nil),             // 1: TW.Tezos.Proto.SigningInput
	(*SigningOutput)(nil),            // 2: TW.Tezos.Proto.SigningOutput
	(*OperationList)(nil),            // 3: TW.Tezos.Proto.OperationList
	(*Operation)(nil),                // 4: TW.Tezos.Proto.Operation
	(*FA12Parameters)(nil),           // 5: TW.Tezos.Proto.FA12Parameters
	(*Txs)(nil),                      // 6: TW.Tezos.Proto.Txs
	(*TxObject)(nil),                 // 7: TW.Tezos.Proto.TxObject
	(*FA2Parameters)(nil),            // 8: TW.Tezos.Proto.FA2Parameters
	(*OperationParameters)(nil),      // 9: TW.Tezos.Proto.OperationParameters
	(*TransactionOperationData)(nil), // 10: TW.Tezos.Proto.TransactionOperationData
	(*RevealOperationData)(nil),      // 11: TW.Tezos.Proto.RevealOperationData
	(*DelegationOperationData)(nil),  // 12: TW.Tezos.Proto.DelegationOperationData
	(common.SigningError)(0),         // 13: TW.Common.Proto.SigningError
}
var file_Tezos_proto_depIdxs = []int32{
	3,  // 0: TW.Tezos.Proto.SigningInput.operation_list:type_name -> TW.Tezos.Proto.OperationList
	13, // 1: TW.Tezos.Proto.SigningOutput.error:type_name -> TW.Common.Proto.SigningError
	4,  // 2: TW.Tezos.Proto.OperationList.operations:type_name -> TW.Tezos.Proto.Operation
	0,  // 3: TW.Tezos.Proto.Operation.kind:type_name -> TW.Tezos.Proto.Operation.OperationKind
	11, // 4: TW.Tezos.Proto.Operation.reveal_operation_data:type_name -> TW.Tezos.Proto.RevealOperationData
	10, // 5: TW.Tezos.Proto.Operation.transaction_operation_data:type_name -> TW.Tezos.Proto.TransactionOperationData
	12, // 6: TW.Tezos.Proto.Operation.delegation_operation_data:type_name -> TW.Tezos.Proto.DelegationOperationData
	6,  // 7: TW.Tezos.Proto.TxObject.txs:type_name -> TW.Tezos.Proto.Txs
	7,  // 8: TW.Tezos.Proto.FA2Parameters.txs_object:type_name -> TW.Tezos.Proto.TxObject
	5,  // 9: TW.Tezos.Proto.OperationParameters.fa12_parameters:type_name -> TW.Tezos.Proto.FA12Parameters
	8,  // 10: TW.Tezos.Proto.OperationParameters.fa2_parameters:type_name -> TW.Tezos.Proto.FA2Parameters
	9,  // 11: TW.Tezos.Proto.TransactionOperationData.parameters:type_name -> TW.Tezos.Proto.OperationParameters
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_Tezos_proto_init() }
func file_Tezos_proto_init() {
	if File_Tezos_proto != nil {
		return
	}
	file_Tezos_proto_msgTypes[3].OneofWrappers = []any{
		(*Operation_RevealOperationData)(nil),
		(*Operation_TransactionOperationData)(nil),
		(*Operation_DelegationOperationData)(nil),
	}
	file_Tezos_proto_msgTypes[8].OneofWrappers = []any{
		(*OperationParameters_Fa12Parameters)(nil),
		(*OperationParameters_Fa2Parameters)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Tezos_proto_rawDesc), len(file_Tezos_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Tezos_proto_goTypes,
		DependencyIndexes: file_Tezos_proto_depIdxs,
		EnumInfos:         file_Tezos_proto_enumTypes,
		MessageInfos:      file_Tezos_proto_msgTypes,
	}.Build()
	File_Tezos_proto = out.File
	file_Tezos_proto_goTypes = nil
	file_Tezos_proto_depIdxs = nil
}
