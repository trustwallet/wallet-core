// SPDX-License-Identifier: Apache-2.0
//
// Copyright Â© 2017 Trust Wallet.

syntax = "proto3";

package TW.Oasis.Proto;
option java_package = "wallet.core.jni.proto";

import "Common.proto";

// Transfer
message TransferMessage {
    // destination address
    string to = 1;

    // Gas price
    uint64 gas_price = 2;

    // Amount values strings prefixed by zero. e.g. "\u000010000000"
    string gas_amount = 3;

    // Amount values strings prefixed by zero
    string amount = 4;

    // Nonce (should be larger than in the last transaction of the account)
    uint64 nonce = 5;

    // Context, see https://docs.oasis.dev/oasis-core/common-functionality/crypto#domain-separation
    string context = 6;
}

message EscrowMessage {
    uint64 gas_price = 1;
    string gas_amount = 2;
    uint64 nonce = 3;

    string account = 4;
    string amount = 5;

    string context = 6;
}

message ReclaimEscrowMessage {
    uint64 gas_price = 1;
    string gas_amount = 2;
    uint64 nonce = 3;

    string account = 4;
    string shares = 5;

    string context = 6;
}

// Input data necessary to create a signed transaction.
message SigningInput {
    // The secret private key used for signing (32 bytes).
    bytes private_key = 1;

    // Transfer payload
    oneof message {
        TransferMessage transfer = 2;
        EscrowMessage escrow = 3;
        ReclaimEscrowMessage reclaimEscrow = 4;
    }
}

// Result containing the signed and encoded transaction.
message SigningOutput {
    // Signed and encoded transaction bytes.
    bytes encoded = 1;
    
    // error code, 0 is ok, other codes will be treated as errors
    Common.Proto.SigningError error = 2;

    // error code description
    string error_message = 3;
}
